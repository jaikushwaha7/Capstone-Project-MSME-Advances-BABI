<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Algo Complexity' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;1&quot;'>
        <calculation class='tableau' formula='&quot;1&quot;' />
      </column>
    </datasource>
    <datasource caption='Sheet2 (Capstone_Model_details)' inline='true' name='federated.0gpbd4f06roish11lc50e113xd83' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Capstone_Model_details' name='excel-direct.15823r71gd84dv17ficfv16s1oy1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Study/Great Lakes/Capstone/Final Data/Capstone_Model_details.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.15823r71gd84dv17ficfv16s1oy1' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:W229:no:A1:W229:0' header='yes' outcome='2'>
            <column datatype='integer' name='Sl. No.' ordinal='0' />
            <column datatype='string' name='Data File' ordinal='1' />
            <column datatype='string' name='Missing Values?(Yes/No)' ordinal='2' />
            <column datatype='string' name='Imputed?(Yes/No)' ordinal='3' />
            <column datatype='string' name='Feature Engineered?(Yes/No)' ordinal='4' />
            <column datatype='string' name='Type of Feature Engg.' ordinal='5' />
            <column datatype='string' name='Scaling?(Yes/No)' ordinal='6' />
            <column datatype='string' name='Type of Scaling' ordinal='7' />
            <column datatype='string' name='Classs Imbalance Treatment? (Yes/No)' ordinal='8' />
            <column datatype='string' name='Class Imbalance treatment type' ordinal='9' />
            <column datatype='string' name='PCA?(Yes/No)' ordinal='10' />
            <column datatype='string' name='No. of PC used' ordinal='11' />
            <column datatype='string' name='Algorithm used' ordinal='12' />
            <column datatype='string' name='Hyperparameter used? (Yes/No)' ordinal='13' />
            <column datatype='string' name='Cross-validation technique used? (Yes/No)' ordinal='14' />
            <column datatype='string' name='Cross-validation technique' ordinal='15' />
            <column datatype='string' name='Train/Test Data' ordinal='16' />
            <column datatype='real' name='Accuracy' ordinal='17' />
            <column datatype='real' name='Precision' ordinal='18' />
            <column datatype='real' name='Recall' ordinal='19' />
            <column datatype='real' name='F1  score' ordinal='20' />
            <column datatype='real' name='AUC/ROC' ordinal='21' />
            <column datatype='integer' name='Complexity' ordinal='22' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Sl. No.</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sl. No.]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Sl. No.</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data File</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data File]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Data File</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Missing Values?(Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Missing Values?(Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Missing Values?(Yes/No)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imputed?(Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Imputed?(Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Imputed?(Yes/No)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feature Engineered?(Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Feature Engineered?(Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Feature Engineered?(Yes/No)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Feature Engg.</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Feature Engg.]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Type of Feature Engg.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scaling?(Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Scaling?(Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Scaling?(Yes/No)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Scaling</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Scaling]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Type of Scaling</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Classs Imbalance Treatment? (Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Classs Imbalance Treatment? (Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Classs Imbalance Treatment? (Yes/No)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class Imbalance treatment type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Class Imbalance treatment type]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Class Imbalance treatment type</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PCA?(Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PCA?(Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>PCA?(Yes/No)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No. of PC used</remote-name>
            <remote-type>130</remote-type>
            <local-name>[No. of PC used]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>No. of PC used</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Algorithm used</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Algorithm used]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Algorithm used</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hyperparameter used? (Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Hyperparameter used? (Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Hyperparameter used? (Yes/No)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cross-validation technique used? (Yes/No)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cross-validation technique used? (Yes/No)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Cross-validation technique used? (Yes/No)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cross-validation technique</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cross-validation technique]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Cross-validation technique</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Train/Test Data</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Train/Test Data]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Train/Test Data</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Accuracy]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Accuracy</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precision</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precision]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Precision</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recall</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recall]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Recall</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1  score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F1  score]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>F1  score</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AUC/ROC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AUC/ROC]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>AUC/ROC</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Complexity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Complexity]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Complexity</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W229:no:A1:W229:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Auc/Roc' datatype='real' name='[AUC/ROC]' role='measure' type='quantitative' />
      <column datatype='real' name='[Accuracy]' role='measure' type='quantitative' />
      <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
      <column caption='Error' datatype='real' name='[Calculation_1279866785154035713]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1-[Accuracy]' />
      </column>
      <column datatype='integer' name='[Complexity]' role='measure' type='quantitative' />
      <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[AUC/ROC]' derivation='Avg' name='[avg:AUC/ROC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Accuracy]' derivation='Avg' name='[avg:Accuracy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1279866785154035713]' derivation='Avg' name='[avg:Calculation_1279866785154035713:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Complexity]' derivation='Avg' name='[avg:Complexity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1  score]' derivation='Avg' name='[avg:F1  score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
      <column-instance column='[AUC/ROC]' derivation='Sum' name='[sum:AUC/ROC:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Complexity]' derivation='Sum' name='[sum:Complexity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[F1  score]' derivation='Sum' name='[sum:F1  score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Complexity]' derivation='Var' name='[var:Complexity:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.610632' measure-ordering='alphabetic' measure-percentage='0.349138' parameter-percentage='0.0402299' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[avg:Calculation_1279866785154035713:ok]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>0.40333333333333332</bucket>
            </map>
            <map to='#256f3d'>
              <bucket>0.38166666666666665</bucket>
            </map>
            <map to='#27763d'>
              <bucket>0.35833333333333334</bucket>
            </map>
            <map to='#2b7c40'>
              <bucket>0.35499999999999998</bucket>
            </map>
            <map to='#308344'>
              <bucket>0.31888888888888889</bucket>
            </map>
            <map to='#398949'>
              <bucket>0.30599999999999994</bucket>
            </map>
            <map to='#428f4d'>
              <bucket>0.30399999999999999</bucket>
            </map>
            <map to='#49964f'>
              <bucket>0.25857142857142856</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.19999999999999996</bucket>
            </map>
            <map to='#499894'>
              <bucket>0.5</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0.30166666666666669</bucket>
            </map>
            <map to='#519c51'>
              <bucket>0.23999999999999999</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.18000000000000002</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0.37</bucket>
            </map>
            <map to='#59a253'>
              <bucket>0.23428571428571426</bucket>
            </map>
            <map to='#61a956'>
              <bucket>0.22999999999999998</bucket>
            </map>
            <map to='#67af5c'>
              <bucket>0.2225</bucket>
            </map>
            <map to='#6eb663'>
              <bucket>0.21999999999999997</bucket>
            </map>
            <map to='#75bc69'>
              <bucket>0.21374999999999997</bucket>
            </map>
            <map to='#79706e'>
              <bucket>0.22599999999999998</bucket>
            </map>
            <map to='#7dc370'>
              <bucket>0.20999999999999996</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>0.20749999999999999</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>0.50750000000000006</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0.39000000000000001</bucket>
            </map>
            <map to='#8ed07f'>
              <bucket>0.192</bucket>
            </map>
            <map to='#98d687'>
              <bucket>0.18999999999999995</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>0.26500000000000001</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.13</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0.30333333333333329</bucket>
            </map>
            <map to='#a5db96'>
              <bucket>0.12</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0.255</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>0.055714285714285716</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.19499999999999995</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>0.48499999999999999</bucket>
            </map>
            <map to='#d37295'>
              <bucket>0.23249999999999998</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>0.26000000000000001</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>0.27000000000000002</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0.21200000000000002</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.19500000000000001</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>0.48749999999999999</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.15999999999999998</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>0.32000000000000001</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.17499999999999999</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>0.32500000000000001</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[sum:AUC/ROC:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[sum:Complexity:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[var:Complexity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Algorithm used:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;KNN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AdaBoost&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Decision Tree&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neural Network&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Light Gradient Boost&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ensemble of rf_model,log_classifier,ada_classifier,knn_classifier, gnb,cb_classifier,lg,xg,dt_classifier,svc_classifier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bernoulli Naïve Bayes&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SVC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Extreme gradient boost&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Neural Network with F1 and ENtropythreshold optimization&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Neural Network with F1 threshold optimization&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ensemble&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Logistic Regression&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gaussian Naïve Bayes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cat Boost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Random Forest&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Naïve Bayes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;catBoost&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Algorithm used:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Decision Tree&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Neural Network with F1 threshold optimization&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Random Forest&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AdaBoost&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Logistic Regression&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Ensemble&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;SVC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gaussian Naïve Bayes&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;KNN&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cat Boost&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Neural Network&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Light gradient boost&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bernoulli Naïve Bayes&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Naïve Bayes&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;catBoost&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Neural Network with F1 and ENtropythreshold optimization&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Extreme gradient boost&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Accuracy Comparision'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column datatype='real' name='[Accuracy]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='string' name='[Train/Test Data]' role='dimension' type='nominal' />
            <column-instance column='[Accuracy]' derivation='Avg' name='[avg:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train/Test Data]' derivation='None' name='[none:Train/Test Data:nk]' pivot='key' type='nominal' />
            <column-instance column='[Accuracy]' derivation='Sum' name='[sum:Accuracy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[sum:Accuracy:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]' direction='DESC' measure-to-sort-by='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[sum:Accuracy:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' />
              <size column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]</rows>
        <cols>([federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk] / [federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk])</cols>
      </table>
      <simple-id uuid='{E82E6718-844C-427B-AD7D-477ACE47C37B}' />
    </worksheet>
    <worksheet name='Auc/Roc vs Scaling'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column caption='Auc/Roc' datatype='real' name='[AUC/ROC]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scaling?(Yes/No)]' role='dimension' type='nominal' />
            <column-instance column='[AUC/ROC]' derivation='Avg' name='[avg:AUC/ROC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scaling?(Yes/No)]' derivation='None' name='[none:Scaling?(Yes/No):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' value='272' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</rows>
        <cols>[federated.0gpbd4f06roish11lc50e113xd83].[none:Scaling?(Yes/No):nk]</cols>
      </table>
      <simple-id uuid='{A5B0AABB-3821-4602-8A5F-6EB18027069C}' />
    </worksheet>
    <worksheet name='Complexity vs error'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column datatype='real' name='[Accuracy]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column caption='Error' datatype='real' name='[Calculation_1279866785154035713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1-[Accuracy]' />
            </column>
            <column datatype='integer' name='[Complexity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train/Test Data]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1279866785154035713]' derivation='Avg' name='[avg:Calculation_1279866785154035713:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Complexity]' derivation='Avg' name='[avg:Complexity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[Train/Test Data]' derivation='None' name='[none:Train/Test Data:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;AdaBoost&quot;' />
              <groupfilter from='&quot;Cat Boost&quot;' function='range' level='[none:Algorithm used:nk]' to='&quot;Extreme gradient boost&quot;' />
              <groupfilter from='&quot;KNN&quot;' function='range' level='[none:Algorithm used:nk]' to='&quot;Naïve Bayes&quot;' />
              <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;Random Forest&quot;' />
              <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;SVC&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Train/Test Data:nk]' member='&quot;Test&quot;' />
              <groupfilter function='member' level='[none:Train/Test Data:nk]' member='&quot;Train&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:qk]' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:qk] + [federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk])</rows>
        <cols>([federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk] / [federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk])</cols>
      </table>
      <simple-id uuid='{D3C4E60C-CCA2-4121-A5C7-13AF18BD54C9}' />
    </worksheet>
    <worksheet name='F1 score Comparision'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Hyperparameter used? (Yes/No)]' role='dimension' type='nominal' />
            <column datatype='string' name='[PCA?(Yes/No)]' role='dimension' type='nominal' />
            <column-instance column='[F1  score]' derivation='Avg' name='[avg:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1  score]' derivation='None' name='[none:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hyperparameter used? (Yes/No)]' derivation='None' name='[none:Hyperparameter used? (Yes/No):nk]' pivot='key' type='nominal' />
            <column-instance column='[PCA?(Yes/No)]' derivation='None' name='[none:PCA?(Yes/No):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:F1  score:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:F1  score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.64166666666666661' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' max='1.0' min='0.28333333333333333' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</rows>
        <cols>(([federated.0gpbd4f06roish11lc50e113xd83].[none:Hyperparameter used? (Yes/No):nk] / [federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]) * [federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk])</cols>
      </table>
      <simple-id uuid='{BC79CC13-3E65-4881-AEA8-AB4171C45749}' />
    </worksheet>
    <worksheet name='F1 vs AUC Roc'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>F1 vs AUC Roc Vs Precision Vs Recall For Test Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column caption='Auc/Roc' datatype='real' name='[AUC/ROC]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
            <column datatype='string' name='[PCA?(Yes/No)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Precision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Recall]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train/Test Data]' role='dimension' type='nominal' />
            <column-instance column='[AUC/ROC]' derivation='None' name='[none:AUC/ROC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[PCA?(Yes/No)]' derivation='None' name='[none:PCA?(Yes/No):nk]' pivot='key' type='nominal' />
            <column-instance column='[Train/Test Data]' derivation='None' name='[none:Train/Test Data:nk]' pivot='key' type='nominal' />
            <column-instance column='[AUC/ROC]' derivation='Sum' name='[sum:AUC/ROC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1  score]' derivation='Sum' name='[sum:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Precision]' derivation='Sum' name='[sum:Precision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recall]' derivation='Sum' name='[sum:Recall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:AUC/ROC:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]'>
            <groupfilter function='member' level='[none:PCA?(Yes/No):nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]'>
            <groupfilter function='member' level='[none:Train/Test Data:nk]' member='&quot;Test Score for Default&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:AUC/ROC:qk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <shape column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[sum:AUC/ROC:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <shape column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[sum:Precision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <shape column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gpbd4f06roish11lc50e113xd83].[sum:AUC/ROC:qk] + [federated.0gpbd4f06roish11lc50e113xd83].[sum:Precision:qk])</rows>
        <cols>([federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk] + [federated.0gpbd4f06roish11lc50e113xd83].[sum:Recall:qk])</cols>
      </table>
      <simple-id uuid='{2E943056-06B2-4E88-A7DC-E05984CE112E}' />
    </worksheet>
    <worksheet name='F1 vs AUC Roc (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>F1  Vs Precision Vs Recall For Default i.e. 1 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
            <column datatype='string' name='[PCA?(Yes/No)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Precision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Recall]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train/Test Data]' role='dimension' type='nominal' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1  score]' derivation='None' name='[none:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PCA?(Yes/No)]' derivation='None' name='[none:PCA?(Yes/No):nk]' pivot='key' type='nominal' />
            <column-instance column='[Train/Test Data]' derivation='None' name='[none:Train/Test Data:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1  score]' derivation='Sum' name='[sum:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Precision]' derivation='Sum' name='[sum:Precision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recall]' derivation='Sum' name='[sum:Recall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:F1  score:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]'>
            <groupfilter function='member' level='[none:PCA?(Yes/No):nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]'>
            <groupfilter function='member' level='[none:Train/Test Data:nk]' member='&quot;Test Score for Default&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:F1  score:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <shape column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <shape column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[sum:Recall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <shape column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpbd4f06roish11lc50e113xd83].[sum:Precision:qk]</rows>
        <cols>([federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk] + [federated.0gpbd4f06roish11lc50e113xd83].[sum:Recall:qk])</cols>
      </table>
      <simple-id uuid='{42AACE4E-94A4-441A-AA32-9C1E6E5CCCB0}' />
    </worksheet>
    <worksheet name='Precision F1 score Vs Algo/Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column datatype='real' name='[Accuracy]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
            <column datatype='string' name='[PCA?(Yes/No)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Precision]' role='measure' type='quantitative' />
            <column datatype='real' name='[Recall]' role='measure' type='quantitative' />
            <column datatype='string' name='[Train/Test Data]' role='dimension' type='nominal' />
            <column-instance column='[Accuracy]' derivation='Avg' name='[avg:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1  score]' derivation='Avg' name='[avg:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Precision]' derivation='Avg' name='[avg:Precision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recall]' derivation='Avg' name='[avg:Recall:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Precision]' derivation='Max' name='[max:Precision:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[F1  score]' derivation='None' name='[none:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PCA?(Yes/No)]' derivation='None' name='[none:PCA?(Yes/No):nk]' pivot='key' type='nominal' />
            <column-instance column='[Train/Test Data]' derivation='None' name='[none:Train/Test Data:nk]' pivot='key' type='nominal' />
            <column-instance column='[Accuracy]' derivation='Sum' name='[sum:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recall]' derivation='Sum' name='[sum:Recall:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Accuracy:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:F1  score:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]'>
            <groupfilter function='member' level='[none:PCA?(Yes/No):nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]'>
            <groupfilter function='member' level='[none:Train/Test Data:nk]' member='&quot;Test Score for Default&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]' direction='DESC' measure-to-sort-by='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:F1  score:qk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Accuracy:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' value='245' />
            <encoding attr='space' class='0' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Recall:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[sum:Recall:qk]' palette='brown_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' palette='red_green_white_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Precision:qk]' palette='gold_purple_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[max:Precision:qk]' palette='red_green_gold_diverging_10_0' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Recall:qk]' palette='brown_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Precision:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Precision:qk]' />
              <size column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Precision:qk]' />
              <tooltip column='[federated.0gpbd4f06roish11lc50e113xd83].[max:Precision:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Recall:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Recall:qk]' />
              <size column='[federated.0gpbd4f06roish11lc50e113xd83].[sum:Recall:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.66966849565505981' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[sum:Accuracy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' />
              <size column='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gpbd4f06roish11lc50e113xd83].[sum:Accuracy:qk] + ([federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk] + ([federated.0gpbd4f06roish11lc50e113xd83].[avg:Precision:qk] + [federated.0gpbd4f06roish11lc50e113xd83].[avg:Recall:qk])))</rows>
        <cols>([federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk] / [federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk])</cols>
      </table>
      <simple-id uuid='{CF4F4B96-CB84-467D-B3A7-FD8F054B4955}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column caption='Auc/Roc' datatype='real' name='[AUC/ROC]' role='measure' type='quantitative' />
            <column datatype='real' name='[Accuracy]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Complexity]' role='measure' type='quantitative' />
            <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
            <column datatype='string' name='[PCA?(Yes/No)]' role='dimension' type='nominal' />
            <column-instance column='[AUC/ROC]' derivation='Avg' name='[avg:AUC/ROC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='Avg' name='[avg:Accuracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Complexity]' derivation='Avg' name='[avg:Complexity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1  score]' derivation='Avg' name='[avg:F1  score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AUC/ROC]' derivation='None' name='[none:AUC/ROC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[PCA?(Yes/No)]' derivation='None' name='[none:PCA?(Yes/No):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]&quot;</bucket>
              <bucket>&quot;[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:AUC/ROC:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AdaBoost&quot;' function='range' level='[none:Algorithm used:nk]' to='&quot;Gaussian Naïve Bayes&quot;' />
              <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;Light Gradient Boost&quot;' />
              <groupfilter from='&quot;Naïve Bayes&quot;' function='range' level='[none:Algorithm used:nk]' to='&quot;Neural Network with F1 and ENtropythreshold optimization&quot;' />
              <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;Random Forest&quot;' />
              <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;SVC&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Random Forest&quot;</bucket>
              <bucket>&quot;Decision Tree&quot;</bucket>
              <bucket>&quot;Cat Boost&quot;</bucket>
              <bucket>&quot;Extreme gradient boost&quot;</bucket>
              <bucket>&quot;Ensemble&quot;</bucket>
              <bucket>&quot;Light gradient boost&quot;</bucket>
              <bucket>&quot;Neural Network&quot;</bucket>
              <bucket>&quot;AdaBoost&quot;</bucket>
              <bucket>&quot;catBoost&quot;</bucket>
              <bucket>&quot;Naïve Bayes&quot;</bucket>
              <bucket>&quot;Neural Network with F1 and ENtropythreshold optimization&quot;</bucket>
              <bucket>&quot;Bernoulli Naïve Bayes&quot;</bucket>
              <bucket>&quot;SVC&quot;</bucket>
              <bucket>&quot;Gaussian Naïve Bayes&quot;</bucket>
              <bucket>&quot;Logistic Regression&quot;</bucket>
              <bucket>&quot;KNN&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]'>
            <groupfilter function='member' level='[none:PCA?(Yes/No):nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:AUC/ROC:qk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gpbd4f06roish11lc50e113xd83].[Multiple Values] + [federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk])</rows>
        <cols>([federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names] / [federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk])</cols>
      </table>
      <simple-id uuid='{1DA4F6B5-E247-4173-A5DC-5A49625FB623}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Capstone_Model_details)' name='federated.0gpbd4f06roish11lc50e113xd83' />
          </datasources>
          <datasource-dependencies datasource='federated.0gpbd4f06roish11lc50e113xd83'>
            <column caption='Auc/Roc' datatype='real' name='[AUC/ROC]' role='measure' type='quantitative' />
            <column datatype='string' name='[Algorithm used]' role='dimension' type='nominal' />
            <column datatype='real' name='[F1  score]' role='measure' type='quantitative' />
            <column-instance column='[Algorithm used]' derivation='None' name='[none:Algorithm used:nk]' pivot='key' type='nominal' />
            <column-instance column='[AUC/ROC]' derivation='Sum' name='[sum:AUC/ROC:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F1  score]' derivation='Sum' name='[sum:F1  score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gpbd4f06roish11lc50e113xd83].[sum:AUC/ROC:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]'>
            <groupfilter function='member' level='[none:Algorithm used:nk]' member='&quot;AdaBoost&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</column>
            <column>[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk]' />
              <color column='[federated.0gpbd4f06roish11lc50e113xd83].[Multiple Values]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[sum:F1  score:qk]' />
              <text column='[federated.0gpbd4f06roish11lc50e113xd83].[sum:AUC/ROC:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{D5239C3C-231E-4BB4-903B-C4CD8E1FCC87}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FE9A6ECB-B337-4849-B55D-EB14B689D904}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Accuracy Comparision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{473114A2-CAFA-4CF5-B4EF-9750A67A41A2}' />
    </window>
    <window class='worksheet' name='F1 score Comparision'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Hyperparameter used? (Yes/No):nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06E7441F-B9B8-42C9-B15C-CEC3A6101A31}' />
    </window>
    <window class='worksheet' name='Auc/Roc vs Scaling'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:AUC/ROC:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0032D1B7-EDE1-46ED-AC19-0A4D85398547}' />
    </window>
    <window class='worksheet' name='Complexity vs error'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]' type='filter' />
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Calculation_1279866785154035713:ok]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Complexity:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A5C4473-9571-43D8-A20C-51E12BC75A90}' />
    </window>
    <window class='worksheet' name='Precision F1 score Vs Algo/Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]' type='filter' />
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' type='color' />
            <card pane-specification-id='4' param='[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</field>
                  <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Test Score for Default&quot;</bucket>
                  <bucket>&quot;Naïve Bayes&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Accuracy:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:F1  score:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Precision:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[avg:Recall:qk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{39440708-DD77-4C7F-AE6F-B147FB2B1D17}' />
    </window>
    <window class='worksheet' name='F1 vs AUC Roc'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{96161E69-CC1C-44D0-A9DA-E79586CF012C}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]' type='filter' />
            <card param='[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[:Measure Names]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D280614-4236-467D-B8AC-1727C7ECFFA2}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gpbd4f06roish11lc50e113xd83].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[Multiple Values]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08A05839-F9C0-4C2F-B22B-4D7DE3643384}' />
    </window>
    <window class='worksheet' maximized='true' name='F1 vs AUC Roc (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Algorithm used:nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:PCA?(Yes/No):nk]</field>
            <field>[federated.0gpbd4f06roish11lc50e113xd83].[none:Train/Test Data:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5A75B867-0060-4C40-99EC-8D7888B4C8F2}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA54E74D-E453-4FC5-AE9E-32BF4E9BEF49}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Accuracy Comparision' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9aZBc15Xn93vv5b5nVm61b6hCFQo7CFIQF4kUKamlluTuDuuDesIxbrvt
      Dnf02DG2wzP+1PNhItwTdtjhcHhibId73OoJjduatnpEyUOxSaEJkACIfa0Cat8rq3Lft/ee
      PyQqUVnvZRWKQpEFIv8RCDLr/+67y7vnLuece66gqqpKCy28oBC/6AK00MIXiZYAtPBCw/BF
      F6CFFnZDNrHOhU+u0jFwmOOjhxC2cHfu3OH48eP133evXSKRyVER7bz22jnM0pNnq6UcmbKA
      12njzvXLZIpySwBaOPhweIOo1Qojo4d472/+HwJ9oyj5JKq1jWouw0cfvE+1XOLEG++QyCsM
      +O2sWQeYn7jF0lqc9pCX1XieoKXMJ9M5/v6//x1mF9f43ne+0VoCtfB8IV1UORS0sRRNMT09
      y8bGBolMjnaXxIPbtwkMjNWfvX71UySDAclko5hcR7C46B88hFGqzSHVark1A7TwfODI0WMY
      gDMvncHmbqMjFMTjDWAQZQC8VompuzN8tcNN3tKH0eCk5513mF2O43TY8fpDdA2MkB+foCKr
      HB7s4ea9WYRnqQYtlUqYzeZn9boWviSoVCqIoogkSbs//FmhqqTSadxu956SPdMlUKlUepav
      e25QLuZZW1sjGk9quGKp+AWU6GChUqmgKMr+ZiIIe+780FKDPhMIosjKwiIYJNKJGOsbMWan
      J4mnc2QzWVKJKFNT01SVls3xoKElAM8ARpMFl9OJ2+VgbnYel8NMNpdn8tEk0egGkfUNwi6J
      tXT1iy5qC9vQ2gQ/I5gtFgTAHwohKFUUVcRqNWCxWDCaTJgtBozCrq9p4XPGM90Ex+Nx7Hb7
      s3pdC18SFItFDAYDBsPBG2+feYlavnUtbIeqqvV/Bw17EgBVrjAxMc3w2AgSkE1G2ciU6e/u
      qL3MUJvyW2hhKxRFwWg0YjQav+iiaLAnAahUqwiKggxIgGiyUsxtoKrtqKqKoijIsrw/JW3h
      uYWiKAe2b+xJAExmK0bDE8WRzfZkvS8IQv1fCy1sxUHuG3sSgHwmQbZUJLK6jstmIZeOUSqW
      yBarOK1GBEFAFFua1RYasdn5D2LfeKZaoHQ6jcvlelava+FLgnw+f2D3AAdPJFto4XPEvihm
      19bWuHLlCna7Ha/Xy5kzZ/YjmxZa+I2xLzPAzMwMr7zyCmazmXg8vh9ZtNDCM8G+zACbI/7g
      4CAmk2k/smihhWeCfRGAR48e8etf/5pSqcRv/dZv4ff79yObFlr4jbEvAnD06FE8Hg/nz5/n
      yJEj+5FFCy08E+zLHuDRo0fcu3ePWCzG+Pj4fmTRQgvPBHsSgFI+w0e/vkAZAJVH9+9w/fp1
      sqVGP/e+vj7MZjNer5eRkZFnV9oWWnjG2NMSyGxz0hkO1H8LRjtDQRu5fBGrwYosy1SrVVRV
      RZIkFEUhk8ngcDg074pGo1QqFYLB4P6eFW3hC4csy4ii+OVwhVhYXETy+PDaLFDNM7mQYuRo
      rRNLkoTBYOD69esMDw+Ty+X45JNP+M53vtPwnvv375NOp/F4PDx48IBvfetbz7RSLRwsbO0b
      Bw17KpHN6eXNb75T/+12H9N9bnR0lCtXrjA8PKzrHh0IBJifn6dQKBAMBvdY5BZaeHbYF5F0
      uVy8805NUFZXVzW8JEn16fAgjgotvDjYl943OzvL+Pg4ZrMZm81Ge3t7A7+0tERnZyd+v5/b
      t29z7Jj+TNJCC/uNfVGDViqV+vG3SqWi4Y8ePcrU1BSXL1/m6NGj+1GEFlp4Knwh7tCXL1/G
      6XQyNzeHJEl8+9vfbuBlWebevXsYjUZGRkYOpB95C0+Pg+wO/cyXQP/1//VP+dvbFzR//4v/
      /H/iWG/NJnD48GE++ugj7HY7bW1tmmfff/99XnrpJTKZDFeuXOHcuXPPupgttADsgwAUyyWy
      xbzm7/KW0HiJRIJyuUypVNLVDQ8ODnL79m1kWebEiRMaXlVV0uk0giDgdDqb6pc3J7eDqH9u
      4WDgC1HBFItFVFWlVCpRLGpjZxYKBaB2mHrz/7fiwoULWK1WyuUyZrOZl156qYG/evUqS0tL
      yLLM4OAgp06dqnOqqvLxxx9TLpfJ5/O89tpreDyeZ1zDFp4X7E0AVJX19Qg+fxCDJFLMZ8gW
      Ffy+vQUlHR0dZWRkBFVVWV9f1/DxeByv10upVCKRSNDX19fAe71eIpEIsixrNExQW3OeOHEC
      g8HA7Oyshk+lUnR1dSHLMplMRiMA8/PzzMzMYDAYOHfuXEtV+yXGnnaXkaVZSrLK9OwCqCrT
      M/MkIwskcuU9ZVqtVrl8+TIXLlzQ7VxDQ0Ok02nW19fp7e3V8JvR5wRBwGq1aviRkRGi0Sjz
      8/MaXyRBEDh06BCJRIJisUg4HNakv337Nm+88QbhcJiHDx82cKqqcv78eX7961/z4YcfHshg
      TwcZ6XSabDbL8vLygWi7PQ1thYpMZ0eYudkpAGxmiXgsgb1UQbZIyLKMquqHwVYe+wkBXL9+
      na6uLoLBIL/61a80rhK3bt3CYrEwPDzMrVu3eOONNxr4iYkJzpw5Q6FQ4NGjRwQCgQb++vXr
      OBwOnE4nd+/e1Wy0Hz58SD6f5/jx40xMTDA6OtrAHz16lA8++ACAr33ta/VyQ01DFYvFePvt
      t/nggw8ol8saX6bFxUWmp6fp6elhYGCggVNVlfv37xONRjl+/Dg+n0+3vb5M2PQFgpqCIxaL
      0dXVRbFY1AxwiqLU2/vzOEy1JwEI+X3cv3eHQHs3qXQGq9WKyQl+jw1JFB5bePUnFXGLL8jJ
      kyf55JNPmJqa4vTp05pZ4NixYwSDQUqlEi6XS8N/61vf4s6dO0iSxOHDhzX8iRMnmJycJB6P
      c+TIEQ3f399PJpNhfn6eN998U8PfvXuXZDKJ1+tlaWmJwcHBJw1mMHD48GH+/M//nDfffFNz
      IYgsy9y9e5fvfe97/PKXv6Svr6/hQ87MzADw1ltv8fOf/5zvf//7mk36zMwMa2trHD169EsR
      ZWOrL9Dg4CDnzp2jWCzicDga2j6Xy3Hv3j0mJyeRJIkf/vCHmsFldXWV2dlZBgcHCYVCmrwe
      PnxIIpHg+PHj2Gw2Df/o0SNisRjHjx/HbrfvbQlkdbVx8sQJOoM+3G4X4a4+jo2NYhSfXsty
      YeIK//fVn7NojLFojPHB7CX+8uN/0/DM1NQUf/3Xf83777/P2tqa5h03btxgY2OD1dVVrl27
      puFXVlaoVCpUq1XNHkNVVZaXlykWi5TLZZJJ7aUWNpsNi8VCuVzWBPutVqtMTU3xR3/0R8zO
      zjbMDgCiKBIMBjl//jxut1uj++7q6iIWi3H+/PkGwdrE0tISa2trnD59mg8++ECzTFBVldnZ
      WSYnJw9kpLXdYDQaefToERMTE5rBw2AwsLS0xJEjR+ju7tYMDNVqlStXrnD69GkuXbqkqf/4
      +Djlcpnjx4/z/vvva/KenJys7w/ff/99VFX9/LVAf3PjV7x7s7FwRsnI33v19+q/DQZD3V9I
      b4/Q399Pf38/Xq+XyclJDb+ZRhAEXePL5t+aXdsTDodJJBKYzWbNEkWSJLxeL5cuXcLj8WjS
      q6pKJBLB5XIRiURQFKXhmWw2Sy6Xw+FwsLq6ytjYWEP6QCDA+Pg4ly5doqenR1O2Tz/9FJfL
      hd1u58MPP6z7XD0vmJ+fJ5PJ4PP5yOfzDbe6bIbX7OrqIhAIaARAkiTcbjeXLl2ira1NYyDt
      6enh4sWLbGxsaJaeAJ2dnVy4cIF4PE5/fz9wQO8H2FzzV6tVotGohp+ZmWFxcRFBEBgeHtbw
      Xq+XaDSKqqo4nU4N7/F4SKfTALrh3BcXFzl69CjJZJLx8XGNLSKVSrGysqK7QYcn7h+1PVHj
      CF6tVusj1/bZA6BcLteXB6lUSsN3dXVx7949DAaDroAcZAiCwOjoKOPj4xQKBc0SRpZlOjo6
      WFlZYWJigtdee62hk6uqSiaTwel01r/fVhQKBSqVCkajUbftisVind9MfyB9DCKRCB9++GHd
      WrwdmUymHnE4k8lo+ImJCaxWK+FwmOnpaQ2/urrK+vo6Q0NDzM3NafhQKEQul+PUqVOaEVpR
      FEqlEl6vF5vNprsE6ujowGKx4Pf7NTOEx+PB4XBgtVoJhUKaUW7T7uFwOMjlcpqybb1rS0+A
      DjI2FQCpVIr+/n6NitpoNOLxeDhx4gRvvPGGZoRXVbU+OBQKBc29Y9lsFqPRiMPhIJvNavLP
      5XJIktTAH8gZ4Pr167z99ttkMhlu3brF66+/3sC/+eablMtlKpUK+bzW6vzVr36V2dlZisWi
      RsMjCAInTpygUCiwtramMaJBbYbxer3cv39f1xLt9Xp56aWXcDqdmg5erVZJpVJEo1G6urrq
      xrpNzM/P4/f7mZqawuVyoapqgxAYjUYCgQDDw8OcPn1aIyCRSIRAIIDNZmNlZUUjoAcdgUAA
      i8XC3Nwcb7/9dgNXLpe5ceMGq6ur9PX1MTg42FB/VVUJBoMMDg5y8uRJTdubzWYCgQBDQ0O6
      A+cmPzw8jN1ury2x96eavxleffVVLl26hCRJnD17VsOXSiWuXbuGJEkNVt5NOJ3O+vJEzw2i
      vb2ddDpNMBjU1UUPDw9z4sQJEokEpVKpYR9RrVYpFot1LdRXv/rVhjw216ldXV1kMhmNKq+n
      p4ePP/6Y4eFhjEajpnwbGxuIosi1a9fw+/0cP3684Znh4WFWV1f59NNP+eY3v9msCQ8kVFXl
      0aNH9PX1ce7cOY0Nx2AwcPbsWQ4fPszKyopmcKhWq2SzWe7cuYPZbOYrX/lKA7+4uIjD4eDK
      lSt0dnZqBr/l5WVMJhNXr14lHA7XNIT7W+W9471757m//MT49Onf3ef14Vc423+y/rfz58/z
      1ltvkc/nuXLlCl//+tcb3vHJJ59gMpnq+ueXX365zqmqynvvvUdHRwcbGxuMjo5qRovNUd9u
      t5NOpxvONEuSxLFjx+jt7aVUKmk+UqVS4e7duwwODmo6L9Q0EZuap69+9aua+re1tREMBvF4
      PLpuIrdv36ZUKvH973+fixcv8t3vfrdpWx5EdHR0cPbsWW7evMnRo0cb9miqqnLp0iUqlQpH
      jx7VtJ3BYOD48eP09PToXsm7ecbkyJEjum0XDodxu90cP368zh84Abjw6Ao/u/nvGv7mtrka
      BODkyZNcuHABVVV1lzBer7duadTTBrjdbhKJBJVKRXeTfPXqVTKZDMVikVdffbWBMxgM9dkl
      mUxqgn4JgsCZM2c4c+YM9+7do62trWGqtlqtvPbaa7S1tfHgwQPNh45Go1y/fp2+vj5eeukl
      TSd46aWX+PDDD/nggw947bXXNGU/yBAEgTfffBNRFDlx4oRmD6MoCiMjI/j9fi5cuKDZBFer
      VX72s59x8uRJTp06pVGjLi4ucv36dcLhsO7KYGVlhUuXLtHR0cGZM2f2vgRS5DLTU7N09A5g
      txhIbKwRTZcY6O9F2oMt4DfBzYV7zEYX4LF28tezlzhSHGKkfQiAVCGNp8OHp+OJ+jJdyOKy
      1kbxaDbOwNFDdS5PEWulhNn4pDEjkQhHjx5lZWWFaDTaoKpTFIWf/exneL1eYrEYv/u7v9tQ
      PoPBUG/cUCikWWJtCqQgCLoR84xGI2+88QZer5cHDx5w4sSJBiG4ePEiBoOB4eFhjQUcaoae
      6elpTCYTNptN40o+MTHB8vIylUqFs2fP6rqj7xcEQWB5eZnJyUmcTqemk1qtVs6cOYPJZNJV
      XwuCwCuvvMLJkye5d+8ep06dahAQs9nMm2++iaIoTExMaE4abvKSJDE+Ps6xY8f2JgDLC/OE
      urpZXJhnZHiQ5dUN7BYDqXwFr934+GM38+9Qd+R39AtRn/Dv3nmfn15/t4H+z77+9zkcrnXq
      f37+L/jJp/9vA/+Hr/8+f/zmfwjAH/+rf8zDSKNm6J///p9xbvBJBOt33nmHpaUlBgYGNJ14
      U1e99eK37WW/dOkSxWIRSZJ4/fXXG/hyucxHH32EJEm0tbURDocb+E3Hv2YCZDabOXfuHEtL
      S0xOTjI0NNTA71a26elpzp07RywWY3Z29nNxxdgsg6IoXL9+ne9973vcuXOH+fn5uj4eanVe
      WFhgYWGB/v5+2traGspvMpk4e/YsgiDQ2dmpqd/WwWJ7WoAjR47U+c3BZ28zgFr7AKKgggqS
      CMVyFZcioyjS4wI1Sfv4nqideNAXBFVVduHVp+b1sPX9f/pv/3umN+Yb+H/4zn/KqZ4nRzd/
      53d+R7fsUNNlRyKRuitEqVRq2AgvLi7i9Xo5ceIE7777LmNjYw0jvCzLXLx4EUVRCIVCmo36
      uXPnEEWRnp4eVldXNfUKh8PMz8+jqipdXV0a/pVXXuHWrVvMzc3xox/9aMd2eVbYbH9RFDl8
      +DAffvghJpOJI0eONORfKpV4+PAh3/rWt/jFL35BZ2enRtNz+fJlCoUCDoeDQCDQkL5SqfDR
      Rx8hCAI9PT0aO0OlUuHChQt1AQqFQnsTgM7OdsYf3Kejb5BUOoPTYSOVq2C3mpAkacfgR6Io
      NUSD2I7NiurxwhaLrS4vCHVe3IVHJ/utFuHZ+CIP1h418PlKAUmSKFfLvPrPfqBJ/+v/8qc4
      zPZ6PV5++WUuXLjAiRMnsFgsDWUeHBxkfHycjz/+WNcPaXl5GY/Hw6lTp/j5z3+u2SMUi0Wu
      XbuGoigcO3ZM00Hu37/P6dOn8Xg8vP/++xpj2Y0bN5Blmd/+7d/m5s2bn8tpO1EUEUWRG4t3
      eZSahsfbrsWbP+edI18j6KyNxlarFZfLxYULF2hvb9doyarVKolEgu9+97v84he/qLkybGm/
      Bw8eMDAwQH9/P7/85S85fPhwQzkmJyfp7u5meHiYX/ziF4yMjOxNAAxmB8eOH6//drtddO25
      OZ5vVJWdjU//8pN/XZ9BPrz1KdyCf/TtP8Furjlm/ZN3/wdkpWYJ/uDvrhBwtvEP3vqP6+m7
      urqIx+OcP3++Pt1vxY0bN+rak7/927/VeNKePXuW9957j2KxqKsmHR0d5aOPPuLTTz/la1/7
      2t4b4DfABxMX+Ktr/7bhb0fah+sCcGHqMmlPTTuTI8Uv7/0t3z32xNXDYDAwNDTE+fPnGR0d
      1QweY2NjXL9+naWlJV3BHh4e5ubNm3z00Ue88sorB9cO8DzjyuxNPp272fC3f/jOH7GpaP3/
      7n3YIET9bT0NAvC//N3/SaVac6W4cW8Cz4yL/+jV36/zp0+f5tq1a6iqyle+8hVN/g8ePCAY
      DGKz2bh27Rrf+MY3GvhIJILJZGJ9fZ18Pq+rBfui8L+e/5dMbTyxDgvQIAB/eeXfEEnXnBtv
      zEzADPwX3/hPkESJilzlf/7wf68/e/3mOO3uED96uaakUFSF//GDf/GEvz1OyBVoCcBBw0+v
      /5xC5YkOu9PTXheAaDbO39z+d/Wd2/T4CkPBAd4YeiIIfr+fe/fukc1mdaPuxeNxAoEA3d3d
      LCwsaNbJhUKBS5cuAbWDSd3d3c+6ip8Zv3rwa8bXGp0f/8Fbf4gEyIrMv772swbuWMdoXQBU
      VdXwh0OHWgLwPCGajfO/Xfhxw99++9g7DQKwtraGzWbj9OnTukGJx8bGSCQSrK2tNRgIN3H3
      7l1GRkYIBoO89957B0oA9gMH0hmuhc+ObDbLqVOnuHv3LhMTExr+3r17LCwscOzYMR48eKDh
      jx8/ztzcHO+++66uG8qXDS0B+JLh9OnT2O12zp07p2soe+WVV5BlmQcPHnD69GkNf+PGDdxu
      N1arlevXr2v4iYkJLl68yLvvvsvKysq+1OHzREsAvmRwOp1MTk5y9+5d3cjcHo+H733ve7zx
      xhskEgkN7/f7uXPnDq+//nqDBXwTCwsLdVcGvcNIzxtaAvAlw9WrVxFFkVAoxIUL2gh9Fy9e
      5IMPPuC9997T9Zm3Wq0Eg0F+/OMf68ZLOn78OIcOHaJYLD53rth60BWAv/iLv9B9uFLIcOfO
      HaKpHKgqi7NT3Lx+g1Rhb2FRWtg/9PX1MTMzw927d3UdAXeDy+WiUqng8Xg0bhZQi9jx8ccf
      s7KywtTU1LMo8hcKXS1QMpnkr/7qr/jhD3/Y8PeV1TUOHxljfnYGv3uI7v5DFMsPsZuNyLKs
      ewRwE4qyeX2Svul90zNQL/3WUBnNXCU2eUUvvapuSa/NW97l/fLjsjc7hC5vCfmim34Lryk7
      6i4nu57wiqLNf2vdADaqMUJjHQDkKRHNxPBYnyxlttsOtudtMpl47bXX+MlPfkIikdD4Cnm9
      XvL5PBsbGxw7duypTqVtuqWril7bKlvesS0AwLby6fUsWZYRVJBlbTm2tq2i2++aHIr3+/1U
      q1V++tOf8oMf/KDumScJUCgWUNSadbKUjSPZvEgCIIi7uEKIn9kVQtzVFULc0RVC3OIKoZd7
      w/t1npAe8wr6wis9dvNoVj6pyeH7zfx2viNti5uHqH1ua90A/skv/4x4/sna/r96+0/41mjN
      GLaSWuUPfvzHDen//D/457S7ntgCrl69SqlU4jvf+Q5Xr17VWJqPHTvG8PAwsiwzPT39VPe7
      bYZFEXQ8hhsDEzTyAjS8X+/bSZJUa39VW46tbSuoeqmbWIJ/9KMf6Vaks6ePmZk5enr7SKXS
      SKKBnk5v/aPvHIRWeMzrP7NbANtnxus8JuzCPyl7s5fvkr+wc/rPre7ojYSNB3pOnjzJ+++/
      zyeffKJ7JPPy5cv1iHybAYp/EzS0/S5l3/mZXfpVEyfMpoawm1c/oWNgjKDP9aSDS0YGN9eF
      5oMX672F3xxWq5Xvf//7gP71VidPnqRSqTA+Pq57GOl5Q1MBGOjv5V/95f+Bp32Qb3/3t/DZ
      zc0ebeFLhEgkwvXr1+sxkbYHH94MRHb27Fnu3r2rCVv5vKGpGvTWnfv8vT/4Q97+2lcxSa34
      +i8KNjY28Pl8dHR06MZkOnXqFMlkko8//lj32OHzhqYzgKKoJDZWiKRUXg61rjJ9UTA2Nla/
      xFwv6FggEOCHP/whiqKwvr5+oLxJPwuaCsCpE0e5+WCWMy+AP0gLT/BPf/XfsZ7ZqP/+b7/5
      3xDeoiW6desWsViMSqWiOXDyPKKpAFy+dJFYOovJ6efV0yPNHmvhS4al5BIrqSeb34rcaORM
      JpM4nU5KpZJueMLnDU0FoHvwCLaVefy+1vVBLTzB1772NTKZDKIo6kZfe97QVADmHt4j2HcE
      n3tLJR/f62U0mxEFAVVRKD0O/de6iO7Lj3QxzT9+9x/VfztMDv7s+//sCyzRb47mM0BPL5HY
      OrlwBwFvbaMTW1tkLZnDZHEy1N/JzOQEosVBd1c3ht0Ngi0855AVmUgmUv+dN2vjsj5vaCoA
      TreHKgKrqxv0ddT8ytOFEsPDI/UrkmLRGCZLHqfXj9dufqorkr4QXyBlF18g+el8garNfIGq
      MlVph/TV6rPxBdLJf7svkIbf0nZ6vkxytdFPaXvxt/ox6aX/jX2BGvykPosvUPXZ+wIBrC7N
      E4llOXzmSeAiv9vJvbu38QbaSaUytPl9ZAsVDI99PZ7miqRm/NZLLTRpRXFHXhCe8Lq+QKKw
      Jb02b0na+f2SWCt7U18gg7RzeoOh6U2TAvqXgGx9ol43Hb8bscklInV+S9vp+e1sLXut/Nv4
      LVdb6aV/mhs0d/IF2vp+PV+ghrLpvtuAQTJQVbXCubVtZR1Hwqa+QAAGu5fvv/Y6N+/OQX/t
      JkVnW5hTbU9uVXS7n39/8BZebDS1BFtFhV+992tCPX2fY3FaaOHzRVMByJWrjIyNElte/DzL
      00ILnyuaCsDRI0eYmZzC+TlGD26hhc8bunuAy79+l8WEgoLCG+3aEN4ttPBlge4McPylVwn7
      bFQKORbXYp93mVpo4XOD7gxgc3p5/etv8zoqn0P07BZa+MKwY1iUUmqdidnlz6ssLbTwuaP5
      kchL55lfS2CweTnU24HJICKXc4w/nKGz7xBep5WVhVmShSpDg4MYDa0QQy08f2jaa9MlmW+8
      dQ4pu8FspHar4dLSCodGR9lYWwIgnogjCiKCKGy5AaZZWBRlx7ApO4VVURV1Z159el7Pnr5Z
      thqv74ohyzJyk/WgIis75q885vRcCVSelE0/7MoTXu82l611032/snP6rWXXa5+tbaOXfmva
      Zv926hsNba+pObu0TS1UTC2PndtW/yacHVwhfHYzl69NcPr1t3B5XACIQu2aGVUVAJVDh8dI
      RZaIpgqEPFYEQdB1NQAeczvzW//byO3Gb4m6sBu/Q9ke/2rK67lZAAiisHP5dggXs1tUhK0R
      KXTz3yUixda66ZdtW9tse0QQnpRd1HFleNqoDYIg6Iac2enb7N42T8rXzMWmXnddR4odXCG8
      fj8PHl5iNtjNV4I1W0Bndw+TU7N09vaTSmUo5VKkKhKDbuuWijQPT1G70a953KAdarkzvyV9
      s+aqp9frQ1vfvwMvKLvVTR87809fN13h3i29sKVtmgwOO5d967fR99PaisXFRR4+fIiqqpw6
      dQq/3/+kb+zW9jrYrW3q32aXttFzxIMd9gDra2v0j53l2NCT+PCiwczhkcenw6xmcLtonRZu
      YSvu3r3LW2+9RTab5cGDBwc+aoSuAKwuTLEWSzO/OE4g1E5/R8sa3MLT4a233uInP/kJVquV
      3/u93/uii7MrdOeXZHwDGRGz3Umb5/k/9tbC54cLFy7w1ltvcfLkSd37BQ4adGeA0ZPnGD2h
      kkpEKRZLuGzaOPMttKCHnp4eJicnURTluQif3vw0gyDg9mlvGGmhhZ2wsLCA2Wzm7NmzWK3W
      L7o4u6JlvWrhmUIQBF5++WWuX7/O4uLBd6VvCUALzxRDQ0NMTU0hCMJzETWuJQAtPFM8ePCA
      jY0NPB4Pt27d+qKLsyv2dE9wIRPn0cwiwY5e2gMeVLnM5U9v8/K5s7SiorQAMMhZRV4AACAA
      SURBVDIyQjgcplqtPhczwJ4EILIRY/ToMeZnp8HvZmFuHpvdXvNHqfv6tMKiaPkXJyzK5sXa
      BoMBSZLqV0s9d2FR9GAxiERjUWTVgCzLlMpF1ldX6ervp81pbYVFaZb+BQqLcvPmTWKxGNVq
      lcHBwbogPHdhUfQQ7u5ndWWVwYFeCoU8w6PH6O47hOU5UHe18Pkgl8thNBoRBIF8/uBHjtuT
      ACCItHd2AmB0OACeC11vC58fXn311fqy42mCZn3ROPglbOG5wkJmlp8++jEAf3D0T/BafLuk
      +GLREoAWnilkpUq2kgGabTwPFlp2gBZeaLQEoIUXGi0BaOGFRksAWnih0RKAFl5o7EkAUtFV
      bt66xeziGqCyujjLjWvXSOZK+1S8FlrYX+xJDRpPZzl67MTjK5LCuFwuZhdWMRqkLXFxWr5A
      Wv7F8QXaGjtpM+2XxhfIbbfy4P5d7K420uk06WQSu9VErlDG7rG1fIGapX+BfIGkLWFMNtN+
      aXyBfMFOPP52hMeVdDgctHf3Izbp1C20cNCxR18goWEUat0N3MLzjtbQ3cILjZYAtPBCoyUA
      LbzQaAlACy80WgLQwguNlgC08EJjTwKgVMs8eviQbLEMQDIa4eHkNNUmsddbaOGgY08CsLw4
      T7i7h6WFBQBMNicOg0wqV0JV1cduAM2EYWf+SXpdcmd+S/qmuW+m13lAVXfjN/PfJe8mDzwr
      Xq9w6m7p1Z15dQ/8bmXXtr/6FHV7+vc3e0HTsjfkr598T4YwRQWzyYQo1N6WjkWQzR58DnP9
      DqhmGSmK+viZZrzyuD76d3w9La+XQQOvA1VVtvDN0zd7h6rsUr6d0rJz2djCK3oz7a512zm9
      pmzb7wjb0ja6d4xt+5u65ffWu8GaC1jztleb5Lk9f0Vo3r47lX3PvkCdnR2MP7hPZ98hUqkU
      6UyWKmWKAR9Wo6HpVTVQ80mp+Qrp85t+Js3u2NqRF4Sn5vUcSsQt79dzFtrkJR1/EwBR2rl8
      4mNfGD0ICE25zSc2eb3rghrqppdafMJLkjb91rI/zq4B0pa20ct/e95bnxHFWr1FUWzaNxra
      XscXaOe2edK2kqJ9rqFtdbvdHn2BDGY7x44fr/92u4/tJXkLLRw4tLRALbzQaAlACy80WgLQ
      wguNlgC08EKjJQAtvNBoCUALLzRaAtDCC409CUClkOHOnTtEk1kAUrEIk7MH/ybAFlpohj0Z
      wlZWIxw+Msb87Ax+zxAWh4fqxkzd3F4Li6Lv6/CFhkVRv+CwKPIBDosiN4ZF2e4KsbVt9hoW
      RXmqsCjK8xMWRRJU8oUCilqzK5vN5jq3m6vDpsm6WViUHV0JdnWF2GKu10vf4Cqhl/fO75ce
      m/QNO4RF2TG9ZHg2rhBNwqLslH5r2+mGRRGlnV0hpF3Sb/vb1rAodTeFHcOiPL0rRLOwKJIo
      Ianarry1bQVVL/UeXSE6e/uZmZ6lt6+PVCpNLh2jWqmSLVZxWo27pt8pisRuESa+zPwXWjbh
      iy37b/r+p07/LLxBBdHA4NAQAFaTEbfbRUf3Xt7QQgsHCy0tUAsvNFoC0MILjZYAtPBCoyUA
      LbzQ2JMAFNIxbt2+zcp6AlBZnJnk9p17lKoH/zbAFlrQw54EIBKNM3b0OLl0FIBiVaC/3Ucy
      c/BvBG+hBT3sSQAsRonIegQFQ80yWikSTaQwm0z7Vb4WWthX7EkAwl39GAUY7O+lVCozONiP
      s60dj70lAC08n9jz/QChcLiW0G4HIGB5EnqjWCzycv9x3KYap/LEfG0RjKRSKc50jmETagKj
      qjXXBEmUSKfTqKrKifAohuNiQ9o+VyepVAqAo4FhlKO/1VCsAXd3nR/1H+J3t/GHvL2kUikE
      QeDN/nOM+YcbeIdoq/Nv9L7MsLcfVVXrVkSX5CCVSiGrCr8z9m22V66QKyAXqwiCwFe6TtFp
      DzWkL+dLpCq19//gyDdRVKXOe22eet0FQeC3R96mIlfqbeO2uOq8URb5weg3G7IfDQw3pH+z
      7zXy5XyNFwTajL46r5QUvj30NlsbXykpDem/0vEKaV+6nr9aVuttW66WebPnrXruFqO5npbH
      +QklA0cdpwGo5CukK2lKpRKSJHGkbYjfGft2/d0AFsz1tv96/zmOBg7X3y9AQ9le732Fw76B
      hvTZTBZREJAVmX/vyLca+lXYFaynV1E1fMDhR1B3ija1R6TTaVwuV/331k4ANWeqrb4dO/Fb
      GxVqTl2CINR/75XfS97PO7+97psDVDN+t/dvOrPt1LY78fl8HqPRiNFo/MLbZju/b2rQYjaL
      DOQy2boL2daYMYpcJZvLUyqV63/bymfTaRRFIRJZB7T+HqqqkM3l6um387lcDgGVbDavefcm
      j6qQzeZ0eJlcrohSLZErlJvwBVS5TDavx9fKoypK3Tv1Ca8QWVlmaWmJhYWleljJrelVVaFS
      qRCNxuqdaStfyGZRBIFsJlt3cdnKbw4Eiqxo+HI+S6mqIgi1AQud9JVykZXlZaLxlG7dqpUK
      pUKOdLagy1cqFbLpJMWyvpdqre3lpt+mmM9RKBSQddoGoFTIUygUdNuuUixQrirkM7X+t52v
      loqUKjL5bBZZVZH+9E//9E91S/kZUCqVHnuIqty7fIm1QpFYJE6oPYRIYyedejjOWjRJJp0i
      EPDDFl6uVsjn0ly5fJVgZy8Om7lhdAeYe/SQhUicXCZNIOBv4Ev5DB9fvES5UqJYFfF5nA1p
      y4UsFy9+QrlSolAGn9fVwKfiK1y+fI9SKY1k8eKwmRr4dGKNS5fvUC6lweTBZTdpBBBALmUp
      Y8IoNZZdFEVS8SiJVJ5gOIi0rW7lfIKJu/dYTxRx+tuwGLZ62Src+vhjosUisWiSUDiIgHYA
      AMjnshjMZsQt74/MTaM6fFgNIlNTMwSDgYa2B5h8+JBAKIzFbMZoMGjafvrRQ6LJNKlEgmAw
      oOEfTYyTSsVJpCsE/B4qlUrdI7SUT9e+TVn/20CZK3/3MapBIFc24nFaNPzVi5dQBJV0QcLr
      sjbwM/dvMbUSJR6NEepsR9pWt7mHt3m0sE48GiPY2b7HPcAeMHLyBEXBQDZb0J1mwu0h7o8/
      wuPr13BytUIyk2d45DCSoG9jCLaHiT+axur0aziT1cHpM6cR1CoGm1vDGy32Go+MZHFqeJe3
      nTNnrJSLebxuq4Z3esKcOWOu8R6bbvmgFiZQ1VRe5uanl7H4wnhc2rxr5XcjY6C3L4jduP0T
      CYydPklFMJAtlPUDnj2GXjjA8MAhph49ZFWBzr4B3XRel4OlpSUcbh/d7UEN3x7ysRAt4ndZ
      dNM7bQYUgw+r3aFTNyenz5wGpYrR7tFJbSTc4Scay3C8+5Au394VZiOVZ6zHpWH7hkfxlxUy
      maxu5+4eHMFbqpJJZzGy103wU0MgG9tgOl3GikCoPch2Z+noRhSTzU0lnwHaGziTxYZJLZEt
      itgcWvEpF3PEkhkCwWDDmYR67oJAZHUZJAlBzOMaGdDnDQYgg3v00DZeZn7qETa3nbxiZ7DH
      p+EXZqawuS1klqwM9zcK4dzcLJIk0d3do6k3SJw48zKyWtvoSTo9uFJMk95IY2tLY3W14ZG2
      vkUgHV1nLlvFJYmEQ362euQXMzGSRQOVQobuni7Nu4u5DIpgwGwxYtDxz4cnV4rm8wVdPrIe
      p1qBWCxP+LFSZCvS+SzIKrl8mYCvsZMKgsDa6hKiZIC49ttAlY1InGBfN/FkDluwcZCIra8h
      mh2EAg4EVQEazyMUsykmZ5eRRCvBrg62i2g5n2Hy0RyCZCfQ1bF/e4C27m7Eiow/1KYrZU6X
      i1IuhWjWH0H94U5KmQR6RmaTxY5FVEhns6QyWd30TruZckXBF9TOEABuh5VSWcYX0OONWKwm
      yhWVUFhvlDJgsRopFaG9w6dhY5EV5ubmmJiYoFjdrmNQyaRTRFYWufLpDco6p6QMZjuh7jZU
      1YjLrG29to52KBaRrDadD6iyMDvN3NwcUzMLmiM8VocHr8tGuZhncTmiUzeoVqqIoki1or+G
      DwQDIJdpC7Xr8j6Pn5JcobNbn/e67FgdXtoC2rYDCbfXyfpGEpdTO8O0BYOk4zEyqQQlneI5
      vLXvabKb0Q6NYHP7EEQRi92EhX3cBMcXF6mIRuIbG+g1Yy6dovfQCJ3hgG76pfkFBkeOsLq0
      oOHKhQzTc4sYDCZSyaRu+nSuyrEjh4hGorp8MlvmxNgwsfUNHbaKIjo41N1GZD2ly8vYONwf
      YHU1oWHPvPIqr7/+BiMjI1gM20dZlfW1FVIFmZMnjmLUGYUFQcLpdpFNRFle05Y/trzCoWMn
      kfNZTQe3OP28/PJpXn/jNQ4N9Gg+cD4dA4ub9lCAnu4OzbvzmQwuvx+L2Uww0KZTdzCZTFgt
      RlaWlsjki1rebMUoySwuLFCWtSNYKp8ln0yxsR7XebtCSTFwdGwUm0l7Ai2yskg8nccgKSSS
      2sEvl9gg2DOEuVqmrGGhkIrR1jmARa5QYh8FwOptw2uX8AU7NMuAcrGINximWsyRbTLNen0e
      FuZmaQuENJzRbOfw4UMocoVAULtGBejtCnHt5gMGBnt1+b6eMJ9ev0v/Ie0eBIz4PUbGF9L0
      d+qvU4M+C3dnEhzq1Y5iSrXExPh40xmgLdjJQG8XxWyGis4MoCgVCsUKw6NHsRlg+0ncYP8Q
      y+M3cAU70DsMmU9GeTDxUHcGSG1EMZlhbiXB3PSUJq3V4cBkMNc2pzrRoAGKxQJGq5tjY4cp
      6Xy/YqGAN9jFob4w+WxJw7tsbgSjxMBgzzZGpVisEA75SSaTVHWExx/spDPkQxGs+H12DW/3
      d1COzYPTqzsDWL1h5NQKit2NmX0UAEGQWV+Pk8tqR6m16UnmIhsUiwVK5YpuepvDiVIpEo1p
      RwlBFEknkvhD7fi92k0uwMLSKv09YeYXVvT5xRUG+jqZn1/WYatEohnCLpHldb0lVpXV9RSd
      XgMLaxkNm4iukS3J+Hw+NBMAEpJQZWFhgZJgwKy3DldVUtEoM7PT2L1tmk4eX5nHEe4ltrqs
      aVtFrrK6uIBodeHxODWbZG8oyMz4FMMjQzid2k2qIAgszs8xvxwhsqLXNlAulUnENpiZX8bv
      92r5cp7I4gLryTIeHSVCMr5BWX6iBt2K29eukckXKOSfqEG3QjJArlClo6Mdi1Er/sXkBlWj
      m2J8Q3cGKGVilEU7pUSUCvu2CQaL3U3I78VgMmo+gsFkpb+/Dys0HWWS8Q2yhQqDw4O6vCLL
      FPI5BMBh19HUOG3EkxncbdpNWo23E0+kcHm1MwyI2CwGUvkqnUG9cUTCbjWSzJVpb9OuU0XR
      gNfjppJLkHUF8DR8J4ViqYIiK8ilIlUVjNsaSKmWkSSRZDJDWVawGBrbyOZys7YcxWy3a7VA
      AkgmO3aHiVQsjtfnbRAgq6uNMy/Vljb2Hv3zrD093eRKFQRRv3vk8iUkUa3bULajLINSLZDJ
      5CGsXUaFO7rZSKQxmbUuNL5AmP6BfmrBAPT7RqVUIpfLYbbaNasLo9WOWokimK26ndtgtoEc
      gcf8vglAfHEWd/cgqdmHVLsbl0EdQ3rqrUZY7U68HoV8LgderbrQ7fOwuBZFliHg0y5TFLl2
      a4goakeJ2NoSyWwRSRCahMuoWQ9VBESdj7AwM0VZBbWqoHdpSymfZmkljdduo237LI9E/6Eh
      9BZem4jGkoR7e7Hnizi2jXJyOc/03DKS0aR744soiiTWI6AomEXTZ5ri5xeWUAWQZWjbNsPK
      lQIyEoGAH9Gk/S7ZVAyzzY1fMuFtsr9b24gzcniAiekV3A1aIIGhw0O7lE7EYpGIxeM4PH4s
      DTKkMDk5BZIJRWf5BApTk5MgGuv8viyBFLmMJdhLcm4cd1i7BwBYmJnk4cMJFlfWdd9RLMoM
      HR7G0MQOkMvkKMsilaLORiidZGU9htvlYGNdu4mMRpO4rRKizUUqql1iJWIREpkiTpvExkZa
      w6czBZRsDn9PgI2VmIa3+9o51NOBr837GRq4TDxZYmVlFacgkyo1LhHzmSQWp49croBSyGn2
      B3KlQv/YMfxOJ163Vk/+NOgIehFMDvx+7f5mfWYOT8jJekImsbGm4ReXIhgKSYxeH6uLqxo+
      m8nSGfYzMb3E4IBmdAAq3L5+g4mJh+SKestjhUwiic1iIp7cvv8oUKpYyWdzWCtltAusIqWy
      mXw2h71aJsc+CUCllGZlNYmsivg9Tt2IFOVSUVfFCaCqFaYfPeLB/ftUdbd54PZ5UUo5RJNW
      jWo0WxgbG8Pp8jI0qJ3mO7o6wGjHJql06KjqLFYXY2MjePxd9HRoZ5f2Dj+S3UU5XcTj146C
      VouFYiGP2ebAsOcWFhHVEoIA0XQBk2b548NqUHA6bVhdHs0HFA1GTEYoFEo4dNb4T4O1jQTl
      fJZ4XKvhsnk9rK+so5TTiCbt0tPlsBDPV4ivrmLTyX95YYFSLo/HH8Kou8QRKBT0FSM1SPj8
      HjaiKXze7d/egtcl4mnzo1otOptgM4Ggg1A4hMUfwMo+LYGMZieiuojJbGJ5dZ2enk7NWrWj
      q4vFlfUmhiwj/QPdrCWLVItZQLtOL5dluro6yFe0UmQyW0hnsvjbvERjaczbNmpOjw+DyYrV
      aiZf1GoprDYTuWger9tIKlPEt83aazTA4uIqXZ1uPFatFkoURSSDgYXph1hPvIxjT97iBkaP
      HaNcLIJBwig1fiLJaMFQLrC0kcBrK6LSOIoKgogoiIiCwuTkNCdPHt3RWqwHn8/D0koET0ir
      QXMH23EHwhRLJSRJ2306ewdo76pSrsoYDNq5PxD0EU9mUCtRUkYJn3u7kBjo7m4nW1Iwaazg
      ACoOj5+qGqNSkaEhHpVEOZdko2LEpOvjKREMBVGQUColRPZJAETJzOAu6/yFhWUGR4/w8ME4
      wTYddwWTiWxyGYtVa80EqJbyxPIyDpO2CqV8htu3btPREcbVph3hy4UsH1+8RFdPJ4LRyeFt
      s0QqFuH2rVnaw27a+w5r0js9YY4fU1EQ8bm1m2BBlFDlKuWKTBNj646oFFL83XuX6D1xiFB7
      L25LY0fyhIIMmx3kixXdKVwyGikX88g6F8c9DXKpOKLZjtSk8DMPx4kXFBwWAyOjIxp+/P41
      VNwYrHZGhhoF1BcI4wvoKyZqKJFIV+kJW1jZyNAb3r6MU1lbWsLfHqSoYwnrHzmKdSOOwWDU
      XTssPrrHak7AIMuc/MqZ/VODJpdnuTU+yczcokZVJ1erdHd3cP/OHfztnZq0xWyKWCpHINCG
      rLuZAYvdgUVUarv6bTDbnHS1BxFFSXcUMVrsDA32oioCbrfOBrstjN9rRzSYMej4KgiCzNLc
      DLH1FZYi2j2IqsgIBjPHTpzC+hmGGMlkI9TpI5Mra3yBqpUC927fI57JkkokdJeX1UoZhyfI
      sbHhPY/+AA6PD5OokEklKVW08UDbggGUcg6TXX+P0eYPkc2m8bVpVaQA92/fYHJyklhyuwpZ
      pVoVcdlgbj1Pu19vCSfi8XnJF6q4dabWQirGzOQcK2sR9HYQnf2HsJsknG0eJPbRDiBJKrl8
      kWpVJ6BquYwqGens7MSi00HNdic+lx3RYKK3RysgAMl4DJcvgNej71BWKhaaXpotCAL5UhFF
      lknEtJtYqBl7msNAZ/8AFqOEV7MOrUXQ6+7pwWYWm+5zdoKqKlhdbjpDYbYvkw1GK0NDAwiA
      wagfjtJkcdDdGUak+cXhOyG6kaC7p5dsaoPpaa0lXlUUPD4/4SZuJoosEOxox+vWGqoAyuVy
      LWiujharXC7jcPsIB3w0CYdLOlsiGAxi0rED2NweBg73IwiirvKlXMhRyOYp5ItU2EcBUGQV
      k8mI0aAtpNlmI7q2TioZY2lZa6jKxtaYXtpAVWSSSa0WplwoEOjspJzPk2niC9Q/OEibP4jF
      rG2GYiFP38Bh2sNttOn6AhkYGOgjFApgMOgN4VVi0TQ93UFiMZ0ZQJWZnLjH3fHpJvfT7gxB
      EDEaJZbnZinozICuYCcdXgcej56VGqqlHHdv32ZuOfKZZoDurnYWFxcIdvTS3q5VZRqMRlAq
      zMxqhQNqrhKlbJLlNf3BRRAEjEajzhJLwGYzEtvYYHF+llhKOwgV8mWCAS+lUp5CQWvqKmRS
      VAQLDknVnQFEi5OTZ47jcNj21xJs8/oxqVXyxZLuR3DYzUhmF206I7jT38G5l08zMjJCT6d2
      AxydX0CxGijkFTJJraYCYGllno3VCIs6luDF2VlEowmvr41oRM8XqML8zAzR9TVWVvV8jYx0
      tftYjFU51KOd5hdnpykUyoiSSJMV3I7IZTOoSATb2zW+QqV8gvMfnmdhZoW2bq03o1wtMj09
      T1VVEWkaE3ZHpNIpylW15rKybZOqqhVSqRwWq42QzgxQzOUoVqo43F6dDW4Nfn8bxWKBiqxX
      OgPVapme3l6sFu0SZ35+kVI2j9NrJbqhtcLb2zowVVLYA2EdLVCJ2dlVLFYbhlKRIvsoANlY
      FFe4E7VU0Oiq8+kMosmCSBVB0layXMixsLDAwsICkai2g7sCXhYfzVMsphCM2k2oXJUJBcLk
      i3nau7QOXz293UxN3Of+xCSdOi7DclUg3BEina/SpaMGBfD4Qxzq79ENx97d00NZhpDfp+vu
      vBsEUaJSzJPL5zX3GZhtHs6dO4vb5yCyoHWFkAwWutq9CEY7HrfWFeJpoCgq8cgKmbyeMwEY
      JJFcPk+hoHWEAxClmr6/1MSbNJ0t0NMVJhnb/m1VMukMTpebfL6oUQEDmCSVdLHI/Mwqbh1f
      IEEQ6OzppyOkN7ObcTtFHjx4QNVix8I+aYEUpUpRtJBensHi9GukzOZysvxwmYHhw0w9fEQ4
      2GguN1nt2E1JFiMxHFWV0DY1pqMtyFibvhMcQLFURDKY6e7p0tXDm+0uxsaONk9fLGB1eOiy
      qaiKwl7HCcFgJuRzEE1k8Pn1raE7wShWia1EsXe1U6jImBo2AgIWm4NDo0eapre5A5hWJ8gV
      K+j7czZHMRMlninR29+HLOirqFOpFFWlZnCERo2OxW4nOfcItSoRiyYIbLPi59JJbDYrj6YW
      GRjerkEScLosrKwodIWsxJJ5bKHGjfbA8Ogea9SIrt5G15p9mQEEQaAYi+DpOUQ5m9K9VqI9
      5Gfy4SNcbfodJJXOIaA0XePvhEohy41bd0jEN5hf1Ford0Mmuc6dew9ZX5kjEt970C+5lCUr
      m3CqWVKlvS9CTDYvp157GY/NhlPnPMBuSC7P4+4eJr2x2uRKj+ZYX4zgDgWYnZrB36Y/+/UN
      DtLbFSLQrp1dAQYGRwmG2uju1qo7jWYL8USKocFu1lb1ziOYsZplFtczBNv0FRzPEvsyAwiC
      RO/ICBNT85gcTl19bDaboyxDKZcBnYMRXr+fbqeTz7KL9PhD9HXFKckqdnvzI4vNEO7qJx7P
      gqhi1dlE7wbRaEWo5MiIFtotey2/wvzMNPlCkcWlNdra27HraDt2gqPNz8rCHDa3b88jXHhg
      gFQ2x7GTJ3RbvphNMbe0Si6doCw58Z9pnEnj66usx1PE1lfw94gc7tt22s9soas9wGokij+k
      Z+ORiUeieNrDpLNFAh6ttflZYt/2ALlUCkWsWSX173aSia0tk85rLbEAhdQ6N27fZ3VdX5Ow
      G1xuN6Jg0PUU3R0CLrcDg9GG7TMo8gVRwmGzkE5uUND39t4xb0FQUUUjX3n1VWx796VAMlsx
      SxCPxvY8A5gsVuw2G21+v+6RSckgUa1U8Ia6OXNcawSTJJFKpUr/4eMc6tbztIVMJouAgKBr
      rVUpl4rM6bqpP3vsmwCocoFsoap7J5cil8nkioTbw3R06E+j7rYwneE2CoXPFnc0srFOtVwm
      Fv0sAlQhshxBVcqsR/VdfneCIpdZXV3D5e/AvucJREHAgNViIraxXg/9sReUsmnW40nau7o+
      0wdemJlGVlVmZ2c1XLVcwWq3g1wmltCelqvKCna7jWIuTTqnb0vJZDIgCLp9I76+jjPUTigU
      xqdzluBZY9/coZ2BLrqrG0hGrZZnfXaGwOBhfCaR8fEJ/B7txkaUJEwmE/GEVtX1NHB7Apgk
      MLv0jTU7QyLc04cilwm16x+42QmCYMAfCFKRi5Sq29xVdk9NsL2dQqFQc8d+ijuytsNgthJs
      81HIZVHx72kRWSmV6Orp5OanV+kZ0o7wVpeXQZe+hRegLdiOy1Mkk81jMelXfHBomHQ2j0lj
      yFNZ20gyemSUfHKVpbUUvZ+h/feCfROA6NwMM7ECbosRfyjQMBLZPF6WZifZoBbCRA+SWNOh
      9/frH2ncDenoCmXJTofJCTa9Qy07Y3luGkdbEE+5gsm6t9incqWIO9COTclSVmDP49hjQ5GK
      /ii5G/LpPL0jI6RWVj6THUCQTIyOHYEmN3ruhocTEwTDHbpX1gIsLMxQKYukcxVcw30NnMUo
      8vDhQ1RFJtzVXNCeFfZNALwdnQw7iySSGc0I5PKHOOLXXx9uYnF+nnRJxRyPc+TI3lVfNqcb
      ihUiK0s4nCNYjXv5mAJur4dKpcjyyirDA/r6/maIra/waDmJz+Xi8BH9yAg7IRmLPj5MLmKx
      2/Y4Cygszk6jJBPYzXaaK4v1IRlFrl34lPbebrL5MqdPjO3xDWAySMRiMUSjFbu1cfBRVZWO
      rgFy6TgGTVwgQUc1ur/Ylz2AXClwd3yayOoyVVn+TMaY9q4OBKWMy7d3PTpANldieKgftZpl
      cXGv+4AqZdnIQHcbkYUIuT069ATbuzHJGUwmM/k9b4J/U4gMDPWTTZcwUN3zJlgQDPQN9uNz
      O2nv2Lvw1l5SJRVPktK5N2Jpbor1yCqRaPozzzDPEvsjANUClQqkEkkstr1vZIrZFAtLa1RK
      eRaWtaeKngaDAz3MzK8yMDRGX89ezUEmuju9rCYVzr5yFMdeNTGCgCSI0T/L0QAABjhJREFU
      rG3E2aMGExAJhkNIokg+l9M9crnrGwwGqqUsyWxxz4OPIAiUinlWNhIkNvTjBu0Gk9WNzSqB
      TmS6XDaPwSSSTud1Lb2fN/bnQIzFy8lTj9f2grDnjyBKIqVSEV+4h872nZdKzZDLZbHZ7JQq
      Cnb7XhtaRjI66e92ky81xr18GiwtLuH0dyBlUsgye25lQRBxu93kU0mKFRlzk8PhuiWvFlle
      T9Ae9JMvynveA8jVKj19fRTKcpMDKTsjl8vhcjgwGs043VpD2tCRMWRZobtrQPdAzeeNfbME
      m0ym2j+jNirEblBkBZfbi0FQSKb3bgkG2Iitk1iPsrqqf+Z4J6Riq1y6dJXx8QlyJa07924I
      t7cjCgJt7b17PA32BOurS6g2t25kuJ0gSmZCwTYEUaK79/9v78x627aCMHpEUhS1WIsXWmsk
      J5adpgn6UqBLgv5/tAnaBEFqx5XieFe1k9ZGimQfnAZtTVu9dK0YSs87RUL3Dmd455uZkvAC
      2xML23GwxiMs20G0e76maRCSYTrGdi7/d7KsfNwbV3V9mCef/gl80BIpNiplyuXyB124OJXy
      AyLxKJvVivC1qZU8W5t5VC1BPEAi7NXLX3Bcj9F5jwD2gz02GHtRlLGBaYn9wNQ65/WbPTzP
      pd/rC3sALR7jZP8dvV6P1y9f8O5QLAySZZnjgzrGaEyzESyJOU8+vQ+6JX57u0cknsQ0h0R8
      2qpch22N6J9bbG5WiPiUXM7i62+fCV/zV8KRJZxRneZUoiQYJ4cjSzx99v2N7p9KLtEdWazo
      2UBq1sqDLSajIWri9o8xb8rCGsB0aiNPp1f2/bmOXqeL0Wvy4nmbjYePKeoZoe+AxsnRx9Gx
      2UIJVXAX2dYAV4peyJoFN6DrWBwfn+EBshIhl18Xd/OhEHigqDHKPoK2WRy+37844OlNSG5X
      hK+fJ3cyBPpvCBGSJMQ/wWEtq5NO6zzZLrH78g0DwaoWfV3HaDdodc1Lev5/g6yEmVojTPNc
      +BRIklXW0jF+b3UxzGBZ9MnEQpZlrIm/TmsWa6srLK/lyRdEsxDzZ2E9QC6/zthW8NwAQThh
      0kmVs+6YR19tE72ifeNVONaQqeMwHvQwbY/I5Qah1+J5sJ6/RzEfLAditrt4ssT5h/FUom+5
      ew+28DyPbte/2m4W8WSaydDg5LRNqiquxp0nC2sAvX6Xfm9KYnkN3aeB63WYhoES1ojLKul0
      +sr2IFchKRrlrcdEFJmosBz6Qk3aOKzT73Woblf/URAzm3hmlS8LCUKuK7zA46HJ2QcFbrtj
      sLIimkOB4bmJORiSyQQz4HmysCFQLJahfL/M1qZf+73rWUqmyBWL5LMpWg2/+QCzefXzcw4O
      3gc6BfIcC7NtEomrH78lRHCdET/9+ILjk4a4HDoSJZvNks1mefIkWPVVs3nE6VEDwxRX0s6b
      hfUA1qBPxxwihbVLY3pmcXq4T38wxnNtMmsBxHiSwna1ymhiBWqMFZLCxBMqrY5BqSD+jlLj
      KTY3SjhukCSkgnbDBFUipeM6rUCJtHlz958wIFpylft5neOTNggaQK5UIaAKBrgIYVZ1nUZ9
      F8P2WBU6BfKo12ok1nRsxw1kQGE1iq6r7O3s4pb8h2jcFp12m5VUkn7fIJ642/E/LGgINBma
      1Go1dnb30BLBGsTeBM91qL39FZM46YjoDrYYT2SGgwGZsIThNwhrBvZ4wM7OLrF0kO7UN6Nx
      1sB1PCr3y7R8xjvdNRbSA0RiS2xXK5iDCY5POv62ca1zmo1TVtdVOiMPPSZiBGGWM1EmUxUn
      JAcqiu83TumOHMKygUNhrotcKujsH5+C51La2JrjnYOxkAYAF72BQpKEFCSGuCGKtkQum6M/
      DVGNCkfhFO4FKwL6k+VCkWTvLXI0MfcFTqRXeZwOUoX3aVjIEOjk6JjkUpKVbI7JFWN8bpOD
      d3UmbojmUY2Bf2+pW8OZjqnVDwjhcPD+8FJTsv/5OwvpAfqdJt3WFFuNIzkKRf9RWLeIh4vC
      N09/CKwGDUooJOE6NloizXdfBCuK/5xYSAPYfPgIy74oxQqr4vXAN0WSFeKxMN12k2gsToAw
      PjCe66JqMUKSRKvVoVjMBarI+1z4AzMU7Ir5ZigPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Auc/Roc vs Scaling' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Complexity vs error' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='F1 score Comparision' width='192'>
      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
      FJABAOB4GoruQ8TDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='F1 vs AUC Roc (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Precision F1 score Vs Algo/Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WWwkW5rf94uI3PdMMhcmd7KWW7fu2su0POrWCCMN9GBYgBaMBdvzYMh6
      EmADBgQblgE3bEga6UUCJMOAx5BtQBpJtgDL0BjWqGc87eme3u69devWXtzJTDL3fV8ijh5Y
      xarKjIhkTpEs8jJ+QFUhTp2I88XJ+OJs//OFJIQQWFhcU+R3bYCFxbvEcgCLa43lABbnhxD8
      8Ac/oDNQefLkqWG2di3Lxm6GQqlM5WibbLX7xyhL5enTZ1OfZpu+JAuL0zHsFMim9/hyI0N+
      cwN6DTLZDLHVu+QO94kmVzh48jMSy+sM+oLf+ddf8qc/XWW/mSI+E6Jf2KEte1CcHv7cr36X
      n/z0F/hcMjIS5Y5KMhoinTpkfmWN3a1N8pUmd+68N5WNVgtgcW48+/I+ruQy24+/AuD57iGL
      My4ePnzC6vsfsbfxnK7m4PbiDB3NzurqOmGfg/VbNykcpXE7vciKjDRsA5DL5SjksthcPmr5
      DD/+8U/RFDuFnWcEl27jdU7/PpesWSCL82Jvd5fl1VW2t7aQZBm1XeXe55/z6Z/9i9QPt1hY
      v0OnXmIhESFXG9LI7+MNhvCG49RLBTx2mZ6QkBAsLS2x8fgBlY7KYmKWg3SGG+vLPN864Pbt
      G+xubuEJRbh7+8ZUNp6pA/R6PZxO51ld7mvJda6jajFLvtbj5toSkiQZ5rvIOjrTLlCv1zvL
      y40x7Hfp9AameYSm0my1z9WOt+G86whgOOjR6fbNMwmNRrNl+H+VUolMJjOxvqchNJvg1vqy
      6cMPF1BHr937lRoDpFN7bO/uU6/VEEKjVquxv7PFYa54kqdZznHv4XOEEKR2t6nUm+xtb1Eq
      lugONWq1KpVijmKpwvbGc6qNNoVMmkwmQ73dp16vv8M7PBsOD/bZ3t2jXquhCUGtVmV/Z5Oj
      fOkkT7OS596DZwgG1GptarUajUqRvVSGZrVAqVyk3tHY2tqiXimws5dmOOizubFBf3i1e82d
      RonPvnxEv9O8Sg4gOEwfkc9mGHSqbG5skiuUcATj1CqFk1y7+wfQKXF0uEffFUVrFrAHE2iN
      IvWeRiaTZn8/Q8Cj0Oz22Xj2iGJzQDQ6Qza9R+41Z7qKCCE4PDokn80y7NXZ2XhO+qiAMzxH
      tZw/ybe/t4/Sr5Gt1cgcVcgcHZHO5lmYi1Kud5gJuEjtbuLyhTjMFAg4Bnx+/ynzyysoV+ip
      0WN/Zw+n1iTXGlwdB9D6DRZvfsI3P7iB5JmlUm+wMjdD/nCPZrtPrVZDIAjMzPHd730PdSho
      5vYYyC5KR7todhfp7edokoNYIoHa64Gi4PEFkAYtcqUGtmEbXzTxrm/17VDbzK9+wLc/vo1w
      hinWmtxcipFN7b5RT95InF/+7ncZNFq0GxnafRW3Q2E/lWIobNgdbj769FPUThOXXeaw0GBt
      Kcb21tYVbwEErlCUX/7er6C1W68Gwb1ej7cdDzebTXw+35mYeRrUQZfNrR38kTjz8Zm3vJrG
      7vYey2tryOZd1LfiousIQO132dzeIRBJkIxHTPN26xU0dxCP/d29Gy+yjk4coN/vXzkHuIpY
      dTSZi6yjk5UDh8Px1he7zlN8p8Wqo8lc2WlQC4urhuUAFtcaywEsrjWWA1hca85UDj0sl6n/
      4R+eHCvhCN4/+ctnWcSVpzdQ+f7/+sOTY7tN4W/+xvfenUHXnDN1ADVfoPlPfvvk2HHrpuUA
      I2iaxpeb2ZNjp115h9ZYWBtiLjGDoYqqvVqbsSsyylXXIVwyLAe4xPyP/9dn/MGXeyfH//lf
      +g5/5pur786gd4yaf4YYvFKwKtHbSI63WzCzHOCS8Lf/yY+49zxzcvxf/8fffYfWXE66v/d9
      tNyjk2PPX/mnKHMfv9U1LQe4JAxVjYGqnRxr1ka9C2GqDqUQKrs7O/SHGiBoVIvspY7eWkNk
      YfGumMoBDne3Cc3OsrOzB8Du/hF0qtQ6w/OwzcLi3JmqC9QXEgmfj6KUByGwyRrVZpcwAlVV
      0YT25gkChkN95xgWijB8td1OmZ1Fstunv4MrhqZpY2nD4XCsFdU0bawbpGmqYX3+1b/3O3T7
      r/7vt/7Gv4/HeTXrU1WN73M0nzhFPjOmcoD5RJTHDx+SXFqjVm/gdrlQUXHYFBRFQZZGGhQJ
      bDb9Igp//x8wODg4OU785t9GmZtDvLYfVHqhUO18ce9VmsuJ55vf1L1m98kT1Er15Nj5/h1s
      4fA0t3juyPJ4o2uz2cb2ycqyjDyWphjWZ28wfMMBFMU472XHyPbRncKKoqC85T1OdbbTG+Lj
      j0Mnx8Fg8K0KH6Xx//4bav/8X5wcB/78f4D3z/wqpX/4j07SlGgU9yef0H30+CRNUmRcH3xA
      /f/+13S/+uokPfpf/Y1L5wBvixCCNxoGiTFH+TrQ/ld/HdE8XjCUvDE8f+F/OpdyruQrQvR6
      FP7Ob54cSy4Xi//bPz71+b2NTar/4v84OXbevEHor/yHZ2rjefHFRob/4X9/JTf5xs0E/91/
      +qffnUHnhFbeQdRSAEjdxrmVcyEOUP6t/wW12Tw5jvxnf/UiijVEazToPX6tBXEY95VbP/4j
      tO6rWJXeP/nLyG73udpncXFciAN0vvwStVw5ORa/8RsXUeyZUP1n/xy19CqciPvjj+g+eEj3
      wYNXab/0bdwfv92CzHnw3/zPv0+x9ipG0t/6a79KNOR9hxZdPq5kF+hd09vaovn7/9/JsS0W
      u5QOUKi1yVdeSQde1xVZHGMpqyyuNV/7FqDxu/+W3vPnJ8e+X/u1d2iNxWXja+8Avc1N2j/5
      6cmx+5NPkL1WP9jiGKsLZHGtsRzA4lpjOYDFteZrPwawmMzvfbHDv/rRqw/M/eo3VvmLf+rO
      WD4hxBt7FiSON/VfZaZygHa1yMb+IbHkMsnZIAe7W2RyRe58+i0CrqupPLSARqtHKv/quwjV
      Zpdqs8vf/ac/PkkLeF38l7/+J/j17//LkzS7TeZf/ve/fqG2njVTOUC2VOHDDz9iZ2cLoiGW
      1m7Q6Wv4nDZTOfTofhlVHSIQI2nqmFRYE8cy6zevKRgOR9LQlxSrqoYYWfxRNQ2hvXm+EOJU
      8tuXdopROzXt1Oe/rRxaU988/8T20ToeqoxWvJHMePR30zSNbq/Pk/1X30qI+N0MR38LjOXu
      b4Oqqshv3JD+73Phcmi3XSaTy6JJDgaDAd1aAe/M3LEa0UQOPSpWVBQbEtJImjImFZYlCUUZ
      aWIlCZtOs6snKVYUGWkk1rkiy8jym+dLknRq6bCiKEijdsryqc9/Wzm0PBIV4sT20Tq2KYxW
      vKIo/Pxphi82jk7S/r27i2O/myzLOvUOttE0jOXub8Nx2a/bfnyPenJo9cFvoxY3TtIcn/4G
      SvT2qcuayvq5xTXy+Txzq4v0ul0cvgjzVqTjK8X2YZnf/2L35Hhuxo/tPD+IcM4M93+Cuveq
      q2a/8WtwXg6AJBGLxwHweDxTnWphcRmxZoFe0NvaIv+3/s7JsWN9jfh/+zdPfX77s89o/eiP
      To493/om3j9lhTy87FgO8BJNQ3Q6J4eiO92nOodHGTq/+MXJsS0ewxJcXH6shTCLa43lABbX
      GssBLK41lgNYXGssB7C41lgOYHGtsaZBLd6af/B//uyNr978F3/5O3zj1tw7tOj0WA5g8dY0
      O32qzVexkwY6YsXLylRdILXf5vGjR9Rax4tEtVKeZxvbDK1wGxZXlKlagIPUITfeu83+7j7B
      m+tsbm7hDccQQqBpYvw7AeJYsjoq1T2W347Lf4UYl/qOyplB6EqKVVUdk1hrmhiTBGtCgI5s
      W9MpZ0yKfWKnzjVHz9aTcr9I17N9tI6OY4CKkbRxebcwOF/TtPF717F9LNYoRvWuL+XW/331
      771Y6/DZs1dK1Nmgh2+/N95V0jRtTA6t/1uIU5dtxFQOICGONfYvCrW7fcT9dor1DvGge0yS
      C4zJfI+v8+rvN/ON5JUk3Wvq2iaNCqzH1MAnpY7nNMira7tOOSd/jZRzyqC1p80H+vVhZOdY
      Heucf2y7QUWNF6Rf9invPV2o81u/8yrS98c34vzSnaT+NU+VNm7nNPUOUzrA4tISG5vbLKyu
      U6s1WFmIky03WU94kGWdR0N6oX8fe67He16SJI0Zrn8zkq6m/jhNx6lGr6lTDtLpy5Fk/WuO
      ZzQ4Xyevfh3p1IdBHemeL+s8mLq/kd6LQ6eO0I9CbXSPp7l3yaiOx57s09elUdlGTOUAit3F
      nfffPz5wO4EAwZn4NJewsLhUWLNAFl87hqlfMLj/6oPtysK3cHz6n+jmtRzA4muHaGQYbv3e
      qwS7cTh7ayXY4lpjOYDFtcZyAItrjTUGsHjn/OP/50t6g1eLV3/pu2tcVMgFywEszoV7Gxl+
      +/cenhx/ejPBneWobt4ffLFDu/vqm9F//k+snLd5J1gOYHEuNNo9NtPlk+NExGfoAO8Sawxg
      ca2xHMDiWmM5gMW1ZqoxQCWXZi9bJBRJsLqY4PFX95Bcfm7dWMemWL5kcXkRmsrgq3/2KkGS
      cXzyH03nAOVmh48+/Pg4PDoJgsEA+WKNzkDFg7jS4dFVo7DjIxiFRx9FGIRMf9fh0fVCoWsj
      qkpN03TqHcPw6GP1rmmo2rid6inD0muaCqcNj65TthitI01DHfTo/fA3XyXKNuQPfn06Bwj7
      3Dx4+BXBSJxarYamvdqcolzx8OiKUdjxEYzCo48iGYRMf9fh0fVCoY+XM1149LF6l2UUedxO
      5ZRh6Y9/n9OFRx/qlC0UmcFraZLe/bywfSoHiMQXiMQXTo6DwSBLa9NcwcLicmHoAD////8N
      SiiJzx3gvVsrF2iShcXFYThy7ff7fPnzH9FRr+7HEywsJmHoAA6ni2BwFq/HdZH2WFhcKIZd
      oFt3P2FprUmqUIZla9ujxdcTXQdo1Mrcv/cZ5XqP7/zKn71omywsLgxdB6gWc2jYcbslBr3p
      vpRiYXGV0B0DLK7fQe1W6bSr5AplvSwWFl8LdB2gVMiydvdbxMMhZmdmLtomC4sLQ9cBtEGX
      3c0NKq0Bmrg6gU4tLKZF1wEatQrtbg+XN0DIb30P2OLri+4gePHGB6zd+fSibbGwuHB0WwC7
      3a6buZJL8+VX99lJHX8Mod+u8bs/+CFWJ8niqjKViP+lHFrtNRBC4/nGDjNhP4OBqiu1vaxy
      aD1Z7tvKoUdtfymHHv1zKeXQOmlXWQ499lvq3c8L26dygMgLObTi9FGvN4gn4gx6PYaqdqXk
      0Hqy3LeVQ4/a/lIOPfrncsqhx9Muoxx6FEVR9MseraOzkkOH4wuEX5NDEwwSS4zHd7ewuCpY
      +xgtrjVWXKBzROt26Xzx6osoktMJyyvvziCLMSwHOEe0RoPSP/xHJ8fKzAy273//ndljMY7V
      BbK41lgOYHGtsRzA4lpjOYDFtcZyAItrjeUAFtcaywEsrjWWA1hca6ZyAG3Q5dnTpzQ7fUCQ
      Ozzg2cY2wxHFpYXFVWEqB0gdHLC0tsZh6gCAYHgG+m3avWOZ76jEGfEiGvJo8qhsmmNp7Kh8
      V7xMH0kdlTjDy6jLI+cLoVO2GL+m0C9HN+qzrp1jdw565aBXjn4d6Z2vZ7swOF9oOveu6Vgq
      xm3XrSMYk2ef2H7K809bxy9++Yn5jMoY/30N7kfTpmwBkF5IUF9eV0OSBIOX+nydhkDoVvB4
      ZiPDxzYTgN7jZljOaKrQPV/oFWNcwXrlnMp59dEtRz+nfn0Y1tG4o46/o4yuqWuobtm6P5tu
      vtPV0VRp4++yqcqZygGWFpNsPn1GPLlArVanmM+hyk58bgeyLI9ps5F4w2FecqyJH9e/j+rs
      JUkaSwNJV1OvKMrYHgNZlsZ19pKks29BQpZHY6Dq7EV4aafuNd9MkyR9O8fq6IXto3p+SRq3
      XZJ06sjgfFmWx/YD6NkuSXppevWhH9pd//c9XX1IBnUsSaPPh/FvMXbfeuUY/BaKokwnhlMc
      Xj748IMXRy6CweA0p1tYXDqsWSCLa43lABbXGssBLK41lgNYXGssB7C41lgOYHGtsRzA4lpj
      OYDFtcZyAItrjeUAFtea6RxACAr5POoLNWa/0yJfLOsLpywsrgBTOUAmtUN3OGRr91gOXWs0
      qBcyVNvWh/QsriZTOUBnoJFMzCGLPgB2GVS7l6DbYYVH1wmPrheS2wqPrmP7CJc2PHpiJsTD
      hw/wBmap1Wrs7e2jDnr0NSs8ul54dEMJ7ylst8KjX8Lw6J5QlE9C0ZPjT771nWlOt7C4dFiz
      QBbXGssBLK41lgNYXGssB7C41lgOYHGtsRzA4lpjOYDFtcZyAItrjeUAFtcaywEsrjWWA1hc
      a6ZygF6ryldfPaBQbQJQLmTYfCGNtrC4ikzlAIfZAnc//IBqIQuALzjDsNd6ISe25NBvnG/J
      ocfsvPJyaLskaDSbqOL4NIfDAbyUE1ty6DfOt+TQY3ZeRjn0VA6wsLpOtVBgbW2ZWq3O4cEO
      mqrR6o57p4XFVWCq/QCSpLC6vg6AIxggGAwwfy5mWVhcDNYskMW1xnIAi2uN5QAW1xrLASyu
      NZYDWFxrLAewuNZYDmBxrZnKAYQ2ZGdri97geFm5VSuzn85asUEtrixTOUB6b4dIIsHu7h4g
      ODjMYRs0qXX652OdhcU5M5UDDISEz+NBkQQgsNnsuJ3OMeGThcVVYTot0FyMJ48eEY4lqNWa
      +NwKmVqHkMd5XvZZWJwrJ1ogTdPGpKWjKE4fd+/ePTn2+bzEAISGqoIGiNdUe0KxHUtWbbY3
      0jWhIWzKSJpASNKbabJ8nP76NW3Ksa2vqwPt9uNyFPnN8wEhj6RJL6/zup0KmhhP07Vd07Hz
      hSLxjfMl6TjvG7bbEEJgV14pGO2KjKqqKLL0RjoIZIk30iQEjJyvyBKqqmJXJIavpWuahm3k
      mkLTkEauKSOQpDfzyRI6dkpomnZq22HUTnRs58T2N+wUGkK2o8kv1Mbyi9/3tTQATYAm2d5M
      Q0II6c006fiZeT2NF9eUxIunvtVqTXSASbRaLbxe7xtpmqaNSYBPm/a257+8n9cls3ppb1vO
      NLafto4uyva3Pf88bH+b52jaOjp5PY0W+MdB0zR8Pt9bX+dKIASqptHrD/D5XMbZNJV2p0O5
      VCW5MH8966jXw+32jO0LeS0jrWaLZq1CMDaP+wLr6MLWATKpPZ4+3+bgIHWq/IN2jfbALIfG
      s4ePqDbqPH22YXqtdiPP06f7pLY3KbfMv2ZzcHDAztYztnbN7axlD3i2ucGDB88wmwMbDlo8
      ufcFhUp94mxZvZjh8/tPODg4GN3gpYs2HNBotkxyCPYfPybXaPDs8VPMdm0M+y0ePXxGvXzI
      9n7RtNxsOsXu7g6Pn2+Z26d1eP7VfR4+fEqp0THJqbL17Cm1Zpm9g5LpNUvZNF89en7q50jt
      t2ma1PuFOUCv3yeT2qPW6p7RFY/7mfVqjcRc0jTnoD9E03pIbj8hj8M0L8Mu2H04xjcQvYFv
      Jsqwr7G0FMduks/m8LOwdoMb64sE3eZl93t9ysUs+VLNvPBpUGRatRrheNx088dgMEAIlVpL
      sLgwY3pJmyxoD8DnMr8fSXahyTLLK/N4TfPaWFhaJJFYZnnJvOx+v08hm6b0Yl/623JhDuD3
      +Vhcu0E0HDDNJ9Q+Tx4/5tlWCrvpQ6jg9Xnpdduk0oem1/QFgriUAfu7Keod02YFTVPptDq6
      +45fp1UpUSrVqFVrmF1R7Td5/NlDsoXcxBbA4/eRmFtgYS5qmg9g+/kTnm1soGJWSRIBn4tB
      f8DBfhqzO3J7/XjcTqrFFEfZqmnZqqbRbrV19+m+jtB65A5yNFpNGqb3PmR36zmFXJb9VNn0
      ml6fj+TiCnOxsHnZQmPj6SOebeyOjQde58IcoFKrU85lyBcrpvnUfoehZMNJn5b5s4rP66Ta
      7BEKmvcXZcVJuVwhPjeLQ2c/8esoNhulXAZVMt8s5wmGCfkcDGWbaQsg21zEF2Zotgb4J7wx
      6+UqlWqZTDZvmg+g3e0R9LqoN8y6QOAJBikVSszMhEa3DY9ayqBTxemdweMxHtPA8Z7udr1M
      u2/+kpBkB4mFWerNHiGv2VS5wmw0SrHSYD4ZMr1mtVKjUiqQzZt3ldA0ugMVr0Mydb4LcwCP
      x8ONW7e4895N03w2VwCfMmTgihCcsLzQqDVIziWoVuum+TStj8MTRus06U94s7ucbpJLi8zF
      Z81nxWSFYCiITRvSMOnWSZKEPxzGrUCtYd5sO91ubt26wZ077014WCE2EyJX7TEfj5jm69Zr
      zCYXaFSrE8YVGn3NTsAt0Zzw1U+Hy0kymWQhOTdx5tAbDOGxy9TqZvcusDs9hII+6tWq6TXd
      Hjc3b93kznu3TcuVZIWI301tYCMW8hjmuxAHEEIgqz32UofkS+YtwKBdoWsLEKZBecJwwR8M
      UK+W8fr9pvlk2YHDptFHwWXer0JWZIQ64DC1w1HOuC+uqUNUAZHZGNVS0fDhEkJlMFQJhGfp
      1iqG3RAhBDa7TGpvn6NswfRhFUKQqzS4tRTh4Khgej+uYIheo4LD7Z3wY8t4PQ4qjR6hgNs8
      pywDgnz2kN39I5OcGsOhij80Q69RNR+ED4c4PX4UtUtnoK8sEEKgSBr7+ymyBfOBuqYNqbSH
      LIbtZMrGzjfVpvg/Lrn9A8IrN0ksT86byRUZtnpUJIl1s74FHIc8EYyFWNHNKx3nMusPAtgd
      TtweDa8/RNikayVL0Gl3GIoS792+aWiB0DTyqSPs7TZ3736E2tXvsjSKeYbuEL/07cTEe8ln
      UiAglS0Tn18xzStLHM8XTLhveFFHQoyFkhlFsTlwud04XV5is2Z9cZlBt01X1Vi/ecvkYRPU
      q0U6XY3k7U8I2PVdpZRK4V5Y4NuJpYn3kj1KI1SVbKXNwppxV+JCHKDdqJJ72sYBBMJR5hOz
      hnkXV9ZJaiAJbWL7VKvUCM3MUMwXwSQ+hab26KsKbrtGuzfEaTPui6fTaYaqQr3RIhw0bmZb
      lTK9oUqv3mIIGF9REJkNUe4MTTVTw36bjf0MQa8Tp8fP6vKCoVPFk0tEonPYFJnhBBlWs1LB
      HYrQKeZRMfvBNVrtAfGoh0q5Sdhr3LXKHKQo94a47Q1TBxBaj2a1ieSHZqeP227csrh9IQZq
      GbU3ALv+nfc7TfafPcMjSbj9YVYWjF8WcwsrRBNDFFlCM3mQLsQBEivrLPt9pvMVL8kdbLCR
      beGny+qn3yVkMg6YX1rk3pcPWb/zoek1W80u0Vk/xWqboMe4WRFCMDe/RKtWwuYznokRQjBU
      HKytzFOotEwf/vRBGkcgSMg5wG1XMBqP+WbifBpbwjmhiwbQrJX4+edfkoxH8UTmWU4av1BC
      yWUOvvyccHLd9MfuNFvMxmfJ5Aq8/8GaSU5BNDmHp9Wkq5k30c1Gh7UP3+foKEfEZLEwd5gG
      uwO3O0A47IVBWzdfZH6JqNeL/RStWa2Y4cvHG8wGvcwuv89cRH+h90IcwOP3USnlKRQr+EKz
      JOPGc72zc8sMbGUkScI7wbq9nV3ufvpNdjc3mQm+b5BryN7+Ed1ui/n4LOVmj1m//o9xtLtJ
      sd5EU1w4eyUSs0GDa3ZIH1bo9FrM+Dz0AH0/HdDpKfQHTeYiAartvkE+cLg8dJpVnu/kcLh9
      rCzNG7YAXn+YO7duokkKMzNGNh5T2t8keusTanubDOdmDX/wnZ09GHSYW1tmezfPezfiuvka
      uTSb2QrDoYbT4QTDt7DK3t4RvW6L5FyMUr1jOBit1NrY1QGLd5ZJb+VJJvW7ni6fj2atxG62
      iMsXZGneuAUIRGLcXB+AZCNi8HvDBc4C5XIF5hcWmJmwDoDao9Lo4vf5MOuK9lp1OkON/Z1t
      XF7zQbAkhiBJFCsNbIrxRXvdPrLt+N9B32zeWmLY7yJJGk3TdQUFuzJAVmQK9Q4+l/kbs5LL
      EYonScSM3+hwHOqvUCrh9/vHwgC+jqb2KHcGFPe3EXaX6Y/tsMl0h5DPFfG4je3sdvrYXAq9
      Vpdez3xdQ0ZFSBKlch2bzbh0n9dBV5JJbR0RTZhPgxZyeaLJ+Qljj2PhYKlcxe/3IZs8SCdi
      uLOgXq8TCOg/4NVijnS2QGxukZjJW0sb9njw4CF2l4cbt97HadIKDAcDFLud4WCA3W78o2lq
      jy9+8hlywM97dz7Aa7DMq2nqSWBVWVZMHy44nrmQdOJgjqIOh/AiBmejYVxHnUaVnf00/nCU
      xfm46dD+yYN7CMXF/PIaIZPuhToYINntaC/qyviaGs8e3afVHJC8/SFzYf23tRDaySKhJMu6
      8ULfKH94/PKRZcV0HK6pKpoQKIpCo9EwrKNmtcReOkM4mmA+bvyiEELj0f17yA4Py+s3DV8+
      F9YCFItFIjMRCnnzRR6hDmjVK9hlOx3TKfshP/vDH/F8c5MHj5+bX1OoOJ0O2s0O/YHxZJws
      KxSzKfYOjshkc6bXbJez/NGPP2N7e8d8JXjQ5se/+wfspvepd81X9urlIq5gmErJfIoPoN+u
      YXe5qE+YX3/885/ycHOTL+49MF0JBoGkONBEj3bTbF1DplUt8nRzl2wma35FrcdPfvBD9tL7
      lE2uCSoP7v2Mg71tdtPmq9CVUpFAOEJpwjQoQqPbKGBzeS+HFsjn89KoN/BOUPlJig2Py0Wh
      2sSkJQYUVtaW0IYDZqNm0gGNo9QRksdDJBjA5TAfWLQ7bdJ7O9Qa+gOxl9icbuyKRr3dMxcj
      yDa8ASfFUh2nSTcAwOPz0202cHmMF25e4vX6yefyeLzmeZfWV5GGQyKzs6Y/dj5zRH8o8AUi
      hE0WjgDa7TaF7CH5kvnDiqTgDbjIF6q4Tetdwuv1cHRUJBA0X4Pw+ny0GnU8k9TLknxcR/ki
      HpOu54UMglv1Bk6vD7cmT/zBGs020fllNAGSaedMYtAfMLewhNth5ikSc/Mxmua2O04AAA7R
      SURBVDtlQq4h7d4Qt8lMy8xsgtj8Or4JcgBkhZnYLB6f+SAUIBSLo7i82BTJUDna77RRFQd+
      rwe70/whaDTqBGbiOIMCt1kfEQmt3yUYmyfqcZh2qaKJBPlikxsrEXZyDdOBYzA8wze+GSPo
      nyRZFgRmoiguD/YJzu9w+plbCOF12hgYjC06jQayy4PXo+J0mztAo9EgFF/Cpx1v3DHiQloA
      b8CPpoLLodA1HVxCtZglX6pSKhZRJ4xOZuMxyvk8lWrDJJeEYvcTCchUOip+82YFt9vN/uZj
      nmyZf/nm5cJao1Y3lxi86Pi2Gw2GmnFOh9uDTRK4nE7aEwaX7XqVdCZPo1ahNaFb5YvNMagU
      KJbKpnZKkp2FuQib+6WJehyn200ps8/nXz0xzQcSkgztVoOBar5gIckS/W6bbt+4i+r2+5FU
      DbfTTqdnLtdoVotk8kVqlTI9g5VluKAWAKCUz9DFgV0SkDDusszPJ2mlqwS0Oh0V3CYWNqoV
      KvXu8RdbDAdEGgc723QHHWo18zXjQa9LLp8nFF9kLm7WrRK02h28Ph+ybDawhGajgcPpwuFW
      UCbMXzfLRbbLXWYmSLbj80vkyxWWkjEKzRaxkPHbsFevcJivMh8VaBi/8bLpfWqtNpVKg1VT
      M4fkj7LYPCE+WTdftW63Wrg9PtyyjM1koqDdaKLYHXgVOw67jGri/9VSnnxbw+dQgDnDfHPz
      y5Qaz5kLuml1+4S8+nV6IS1Au9EgOpck5HMTTRgbDWBzh0gEnWi+GOEJ0n2nx0O3WWUwYYnN
      breDJKGpkz/k4XZ7UPtdqnVzlaXNZqPX7dKb0KLZbM7jqdcJazf9ThtXOMpiNEQwYj4NCrC6
      tEi+PmA5aS6dtrvcyGqPRndg+mPb7HYkSUJo6tinmUZxuNxIQqVcmbRvQUFTe3S7vbFPYr2O
      rNhwOGwITZhKVbqNJqF4gnjYTyQaMy1ZUmwszcVoaA7mwsYviAtpAdw+H7VMhoXFBbKZHISN
      +83DTpX7979Acc8QjCYIGjhBp9FAcbpZWl7C6Tbri8okl1YAwfrqwLSC7U4XhexjKvUe/maX
      mZCRFEJiUK+QyVfw+zymUgi7MmD70Sah1XkCPeNvUtldbmjUmZ2bp1aYLId+fP/nDOxBFKeP
      laS+bEEd9uiqCsvLC8gm8g+A2XiS2fgc6+sqQph5q41WrchurozfFyARM17UdLsl7j3dJbyc
      pN4eEA3ov6hcHjtPH+3hcrtISwESYf18Tp+XRi5LYn6BYs58lk6oQx598WNU7zwuf8RwWvdC
      WgBJkuh3GmxubE7YGAGyzcHazffxu53YTayTZcHe9i7NVptK9TQ7qCRsDgfKBKFXJJZkLh42
      nIeGYymEKxhmdTmJYnOYirw0HNz+xvuIgYbHZMAqSRKa2md7a4tixVzeDTC/cpuQz4PXpLsk
      SXB0sEu12aZcNlfhvjgDRbHpfoPtdfzhGZbn5/D5zRY1BcOhwu1P7yCGGgETCcqgr7Gwso4k
      KyRixi8zSZJQ+x22NjepTNgHgSSxfOsj/C47bpPtfRc2DTobjeENhIjPmA+whBCUqk3Wbqzh
      NLHO6Q0Q8LhYXF1j2DOfsjwt9UqBarVGX2WCzl2jWKpSLeXJZHIYD7EElVKJeqVMJpOlP2Eg
      GIjM4nV7WJzXlyG8TrFYIrm4QtBrPGMkK04SYT+R5BJ2oZrYeXp67QaFUoVefzCxq1QpFalX
      q2QyWdOBaL1aodGocZTJ0JqwFyE8G8Xj9Zsugr0kV6ywuraK12Qa9MIcIHWYoVmpTNy+KMk2
      PA6JVCpNx2RGAGD15k0K6T3ml1fPxMZAaJZI0IckyURmzDaaCPLZI3rCwScfv29aiaVCnnJz
      wDc+/RjXhKnA7MEBpXqTdCo92Va/l8N0mnrLbLM5hJduQC1LODF/KjHiJJweP4lYBEmSmJlQ
      R+VinlK9yyeffmz6Fm7UyuQKFe58+A3T6VeAw9Qh9VqNVMr8OUKS8HtcpFJpWh1jp7qwDTGR
      oJdMLsfChIdV7bXoS04cWof7jx5h8uJgf2uTVKbA7vb2mdiZ2d9kO5VDCEGnbfZgSays32Qx
      GZswtpWYX1phbWXhNHJ8ArMzdMo5QrHkxB0O9VabmYCLR5//jKrJS7Oa2uHJzhH7e7tn0gK0
      KlnuP95GO0UdzS0us766hCyZz77NxJLcvLE2ElxLn3AkQLmYIza/aJpPaCrt3gC/Ex58ec9w
      e+2FDILLmT3qqptPPnqfbCZD2G8st7W5/TilLAPZw+r8DGZ14gmEWLQ7GGhncxtzK7eYWzlN
      TplgOHz88WXTH1ciGI5QLuRo94YEhbGAq9cocZCr8/GnH3OQyjIfj5g+NEG/n1qrz8raDVwm
      t+/0eVldWaTT6p5i29BkvOEEv/K9yZt2APyBEOpwiABTQZo/GERUytSabdw+43FFu3RIpq7x
      yccfks5miUeM80qygs/toj3QWFleNgywcCEO0Gn26Go9ci3o9iYtiNh5746RtPlNBt0msjPI
      wiSF6Zmj0m626XTbINuIxmYNHy613yRbbLKynDQdgHc7HXrdNpnMgHa7e7yJy8SC1Rvme2Jf
      oqlDekNYXTHeYHM+CLqdDq1mEw2JmWgU2fBtprKfyrC2vorTbqNtME/Sqnfp9wdkcy06Rple
      IEkyN27fmWjlhTjA/M3bp/6esNZv89kvfk4kvkxiZQ2/ycKt1x8glckz7PdZW1kY+7L6+SFR
      r1fRAEk2HwjKNgdav8ne3gHrt40DAgSi83wjevqvLj/64sc4wwt4fUGSJiFCbG4fIpsinR5w
      4+aaqSzgbJFoNWp0ByogTZhUkHEogr29PRaW1w0ddXZljclD32OEpnL/Z3+AN3Gb8MwM0eA7
      ngZ9/Y8ZgmPjj3JF0+4PQKlQZCYWp5JP82xj9+wMPkM0tU9u/5Bau0nfZP/iaB1NcmUJOEyn
      kW3m77BGPot7Nk6nXuHRk2fT38CFoFGvlqiXS5Tqxm/2aZ4jeFFHRxlTWful+0SSJEkEZpMk
      4+GJsxbR2CzVSplwLEkkZL4p5iyRJIVEIoosy/R65qErZNnBrQ9u4pAd2CasQUyDwxtmfi4+
      IeIahOeSdMpF3MEw8VnzECpni0Q0kcAmywz6PUxkUBwvVq4SCHjxOM9iruoYdyjBQjyMy278
      krgwLdBpEdqQaq3J7IT1AoDATIL3Z043IDtrFLuTRCLB5pOnJivBGs1WF9nuIhb1YFdk09Ag
      01CtVghGYhM/T2VzB/jw7unGVGePTCyRoJDepd7u4zKQOjfqTWyKDX84it9rR50QcOt0CKrV
      KuHZmKkI8NK1AEIdEojMkkwmMZ8217j3s59zmM1y/8HjizLvBLXf4bOf/ZSu4jSJDCfh9/sI
      zURAiDMdozjdXpLJ5AQ5tGDj88/ZyWa5f++rM3O+06Px8N5n7BWapvP7Pr8fbyCAQz7WBZ0J
      QuD2B0kmk6b7MC6dA8hOH6JTZv/gkOGEt9tMdBahqiwvnyLg0BnTKhWYv/0xbrVnsiNMYjho
      8fSLLyhWG2f6LTWPQ2b/IDVhTzIEo7PYNI3k0tKZLIRNg9B6OLwxVmN+yg2zXWYqW0+fUm9V
      2J8QHfrUyAoO+uynDl8MxA2ynU1pZ4fWa1KtlFGEisl4CDiO4DZUVfoTFJnnQSA+T698hD0Y
      MY0NqtjcRJeWcEgaPueESF9TUCvnURx2KhWzXVkSdkml1R8y6PdPFXL9LJFkN36PRq0vT1jh
      VYjEosiaPHFT/KnRVGrFI2TFTtUkNPulcwCbO0AykaArbMyYbIzqteqU6nUajdbETTbnQbNc
      oKNKoA5NV1i1YZfU5hbCZqfZO7tOSHJhlXajTdxEE6OpPQrVKs1KnU7nrMLSnx4hehQLDWQE
      Q1MdlEr+8BDsEsX82YSGl2QbycV1Ot0e0bBJhL8zKe0MUfsd2ri4vb6I2SvL6Q0Q8XmQZYnU
      7iY7pjEqzx67Q6HT7h6vBpug2N3cuHuXcMCH32zJdkpK9Rbv3b5pqi+SFSezwSCKw0b2KMWz
      zZ0zK/80SMgM1f6LOjJrfxSW12/gcYVYSE7eYnoahNCodlTu3FwxnX27dA4gBMhCJbW7NTE8
      utfrBQmC4Vkk7WKHeAIbN9+7za2ba+Z9a0kmEokwbNfPtAWwyxLZTJrihA9FuP0+JKHh9QVx
      nEJrc9YsLK/z3nu3TKciAYKhMEGPxmHWbHvrdCiS4DC1R9Xkq0CXzgEKR/vkK3Xa7a6pgKzX
      buMORQgHAszNzbG6Ojlg6lmiOOxsPvqKjc0d03AjQqhkM0f0ZQc+0xmb09OoFtk/zNBpd0yn
      QTV1gKp4iEdCzCXnWFs7G9XsqZEkjg62efpsg45JOBoQlAo5jkpd5uJns55TLWY5yhVot827
      fpduHSC2sIbka+OQethMHMDmcGCTnbhcHiqn2uxxtqj9Pv0+yIp5464NOjy79wj/UpLY/NKZ
      vHH8oVnu3r1LyO9hKJtsiJEV3F4PLo+bWqlsuif4XBCCfrNDJOmg21dxG7YCGgc7m2iSHckV
      IxZ8eytDswnu3JHwu+3IJht8Ll0LICt28qlttg/Lpp9IUgddDvYPSKfT7KczF2fgCyRJRlO7
      FCsNU9mCbHPz0Xc+wu1wT9wPMA29RoX7T7ZxmMTbEdqQw1SKdDrN7u7Bmcihp0NClgVHmQI2
      Uw2SwsqtO4TDAUKBCeFoTl20TKOY5cl2CofJg3TpWoB6o8HC6k3cSp9WHwIG0WRtTjfJ5PHH
      8eYXzLXhZ40QgtThEQtLi/RVYfIWEWRzBQbdHtKEuGzTUK/XicTmmF/x0my1cTv01bCSbCPx
      so7m502na88eQWp/j+jyMt3ewPTTVEdHGezagAECTUwOIHAaGo06sfllVl02Wp0+DoNp2EvX
      AmSyWfL5LINmmYbJ7KYsKzidTpxOJ44JA6yzp4lKiFaziUcdYNzLVKmU64SiCWZ9ronf1Dot
      R0eHNKsFOv0hlbrx/mFJkl/VkcM8MNbZo9LuQLfZIhHxUqkbb1utlMu4/SFurCSolM9mEHx0
      dESplGfQa1EzGQf8O2r5ZoXGFhsoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
